Search.setIndex({"docnames": ["echidna", "echidna.apps", "echidna.data", "echidna.metrics", "echidna.models", "echidna.models.core", "echidna.models.multidomain", "echidna.procs", "index", "modules"], "filenames": ["echidna.rst", "echidna.apps.rst", "echidna.data.rst", "echidna.metrics.rst", "echidna.models.rst", "echidna.models.core.rst", "echidna.models.multidomain.rst", "echidna.procs.rst", "index.rst", "modules.rst"], "titles": ["echidna package", "echidna.apps package", "echidna.data package", "echidna.metrics package", "echidna.models package", "echidna.models.core package", "echidna.models.multidomain package", "echidna.procs package", "Welcome to echidna\u2019s documentation!", "echidna"], "terms": {"app": [0, 9], "cluster": [0, 3, 9], "attach_pars": [0, 1], "main": [0, 1], "data_augment": [0, 9], "data_mixtur": [0, 9], "data_sampl": [0, 9], "separ": [0, 9], "train": [0, 9], "transcrib": [0, 7, 9], "util": [0, 9], "datasourceact": [0, 1], "loadjsonact": [0, 1], "make_config_act": [0, 1], "make_structure_act": [0, 1], "valid": [0, 9], "data": [0, 7, 9], "augment": [0, 9], "augmentationnod": [0, 2], "from_dict_arg": [0, 2, 3, 4], "process_parti": [0, 2], "require_channel_index_parti": [0, 2], "super_typ": [0, 2], "to_dict_arg": [0, 2, 3, 4], "augmentationnodejourn": [0, 2], "from_dict": [0, 2, 3, 4, 7], "to_dict": [0, 2, 3, 4, 7], "augmentationsetjourn": [0, 2], "augmentationspec": [0, 2], "save_augment": [0, 2], "channelaugment": [0, 2], "channelaugmentationjourn": [0, 2], "sampleaugmentationjourn": [0, 2], "dataload": [0, 9], "build_dataload": [0, 2], "collate_fn": [0, 2], "datanod": [0, 9], "balance_by_remov": [0, 2], "cleanup_index": [0, 2], "ensure_index_init": [0, 2], "get_metr": [0, 2], "get_single_chain": [0, 2], "index_not_initi": [0, 2], "init_index": [0, 2], "list_leaf_nod": [0, 2], "process": [0, 2], "process_single_chain": [0, 2], "push_metr": [0, 2], "to_dict_nochildren": [0, 2], "emptynod": [0, 2], "add_datanode_cl": [0, 2], "get_datanode_cl": [0, 2], "get_datanode_nam": [0, 2], "dataset": [0, 7, 9], "difficulti": [0, 9], "entropydifficulti": [0, 2], "additional_arg": [0, 2], "metric_arg": [0, 2], "put_single_metr": [0, 2], "frequencydifficulti": [0, 2], "metricjourn": [0, 2], "metricsetjourn": [0, 2], "metricspec": [0, 2], "put_metr": [0, 2], "add_metric_cl": [0, 2], "get_metric_cl": [0, 2], "get_metric_nam": [0, 2], "mixtur": [0, 9], "mixjourn": [0, 2], "mixnod": [0, 2], "mixsetjourn": [0, 2], "mixsetspec": [0, 2], "save_mixtur": [0, 2], "sampl": [0, 9], "channel": [0, 2, 5], "from_list": [0, 2], "channeljourn": [0, 2], "created_at": [0, 2], "seed": [0, 2, 4, 7], "datasourc": [0, 2], "length": [0, 2, 5], "offset": [0, 2], "id": [0, 2], "wave_path": [0, 2], "sheet_path": [0, 2], "categori": [0, 2], "track": [0, 2], "fold": [0, 2], "samplejourn": [0, 2], "channel_journ": [0, 2], "samplenod": [0, 2], "samplesetjourn": [0, 2], "process_start": [0, 2, 7], "process_finish": [0, 2, 7], "metadata_path": [0, 2], "spec": [0, 2, 7], "sample_journ": [0, 2], "samplespec": [0, 2], "sample_s": [0, 2], "category_map": [0, 2], "sample_r": [0, 2, 7], "durat": [0, 2, 7], "target_db": [0, 2], "data_dir": [0, 2], "journal_path": [0, 2], "log_path": [0, 2, 7], "log_level": [0, 2, 7], "job": [0, 2, 7], "save_sampl": [0, 2], "transform": [0, 9], "compos": [0, 2], "forward": [0, 2, 3, 4, 5, 6], "crop": [0, 2], "multipointscal": [0, 2], "pitchshift": [0, 2], "resampl": [0, 2], "timestretch": [0, 2], "timestretchandpitchshift": [0, 2], "build_transform": [0, 2], "merge_activ": [0, 2], "metric": [0, 2, 9], "composit": [0, 9], "compositeloss": [0, 3], "compon": [0, 3], "domain": [0, 3], "forward_no_reduct": [0, 3], "deepclust": [0, 9], "deepclusteringloss": [0, 3], "deepldaloss": [0, 3], "graphlaplacianloss": [0, 3], "whitenedkmeansloss": [0, 3], "deep_clustering_loss": [0, 3], "loss": [0, 7, 9], "get_loss_class": [0, 3], "get_loss_nam": [0, 3], "register_loss_class": [0, 3], "spectrogram": [0, 9], "l1spectrogramloss": [0, 3], "l2spectrogramloss": [0, 3], "spectrogramconvergenceloss": [0, 3], "spectrogramloss": [0, 3], "multiscale_spectrogram_loss": [0, 3], "waveform": [0, 9], "l1waveformloss": [0, 3], "l2waveformloss": [0, 3], "negativesdrloss": [0, 3], "negativesdsdrloss": [0, 3], "negativesisdrloss": [0, 3], "source_to_distortion_ratio": [0, 3], "model": [0, 7, 9], "core": [0, 4], "baselin": [0, 4], "commonlay": [0, 4], "convtasnet": [0, 4], "demuc": [0, 4], "waveunet": [0, 4], "multidomain": [0, 4], "cerberu": [0, 4], "chimera": [0, 4], "encdec": [0, 4], "checkpoint": [0, 7, 9], "get_epoch": [0, 4], "get_model": [0, 4], "get_model_class": [0, 4], "get_model_hyperparamet": [0, 4], "get_optimizer_class": [0, 4], "get_optimizer_hyperparamet": [0, 4], "get_scheduler_class": [0, 4], "get_scheduler_hyperparamet": [0, 4], "get_torch_model": [0, 4], "get_torch_optim": [0, 4], "get_torch_schedul": [0, 4], "save_torch_checkpoint": [0, 4], "initialcheckpoint": [0, 4], "savedcheckpoint": [0, 4], "checkpointmodel": [0, 4], "get_class": [0, 4], "get_hyperparamet": [0, 4], "initialmodel": [0, 4], "save_torch_model": [0, 4], "savedmodel": [0, 4], "register_model_class": [0, 4], "nest": [0, 9], "baselinechimeranet": [0, 4], "baselineencdecmodel": [0, 4], "convtasnetchimeranet": [0, 4], "convtasnetencdecmodel": [0, 4], "demucschimeranet": [0, 4], "demucsencdecmodel": [0, 4], "waveunetchimeranet": [0, 4], "waveunetencdecmodel": [0, 4], "generate_dft_matrix": [0, 4], "init_conv_weight": [0, 4], "init_lstm_weight": [0, 4], "init_modul": [0, 4], "match_length": [0, 4], "proc": [0, 9], "clusteringjourn": [0, 7], "clusteringspec": [0, 7], "mask_from_embed": [0, 7], "merge_window": [0, 7], "split_into_window": [0, 7], "separationjourn": [0, 7], "separationspec": [0, 7], "epochjourn": [0, 7], "trainingspec": [0, 7], "transcript": [0, 9], "transcriptionjourn": [0, 7], "transcriptionspec": [0, 7], "stepjourn": [0, 7], "process_batch": [0, 7], "validationjourn": [0, 7], "validationspec": [0, 7], "parser": 1, "arg": [1, 2], "class": [1, 2, 3, 4, 5, 6, 7], "option_str": 1, "dest": 1, "narg": 1, "none": [1, 2, 3, 4, 5, 7], "const": 1, "default": [1, 2], "type": [1, 2, 3, 4, 5, 6, 7], "choic": 1, "requir": 1, "fals": [1, 2, 3, 5, 7], "help": 1, "metavar": 1, "base": [1, 2, 3, 4, 5, 6, 7], "action": 1, "json_schema": 1, "option": [1, 2, 3, 5, 7], "dict": [1, 2, 3, 4, 6, 7], "structure_class": 1, "source_sample_r": 2, "int": [2, 3, 4, 5, 6, 7], "target_sample_r": 2, "waveform_length": [2, 3, 5], "channel_augment": 2, "n_fft": [2, 4, 5, 7], "2048": [2, 3, 7], "hop_length": [2, 5, 7], "512": [2, 3, 7], "win_length": [2, 7], "children": 2, "classmethod": [2, 3, 4, 7], "d": [2, 3, 4, 7], "c": [2, 5, 7], "properti": [2, 3], "datetim": [2, 7], "list": [2, 3, 5, 7], "object": [2, 4, 6, 7], "str": [2, 3, 4, 5, 6, 7], "node_journ": 2, "scale_rang": 2, "tupl": [2, 5], "scale_point_rang": 2, "time_stretch_rang": 2, "pitch_shift_rang": 2, "input_metadata_path": 2, "output_metadata_path": 2, "augmentation_per_par": 2, "devic": [2, 7], "cpu": [2, 7], "time_stretch_r": 2, "float": [2, 3, 5, 7], "pitch_shift_r": 2, "scale_amount": 2, "scale_fract": 2, "sample_augment": 2, "batch_siz": [2, 3, 5, 7], "num_work": 2, "shuffl": 2, "bool": [2, 3, 5, 7], "l": [2, 5], "tensor": [2, 3, 4, 5, 6, 7], "kwarg": 2, "obj": 2, "context": 2, "kei": 2, "node_list": 2, "valu": 2, "name": [2, 3, 4], "cl": 2, "metadata_path_list": 2, "metric_nam": 2, "metadata": [2, 7], "metric_valu": 2, "metric_journ": 2, "mix_list": 2, "mix_index": 2, "mix_journ": 2, "mix_category_list": 2, "mix_per_par": 2, "info": 2, "category1": 2, "category2": 2, "min_channel": 2, "1": [2, 3, 5, 7], "max_channel": 2, "3": [2, 5], "category3": 2, "other": 2, "path": [2, 4], "journal": 2, "tp": [2, 5], "singl": 2, "raw": 2, "wave": [2, 5], "sheet": 2, "pair": 2, "rel_path": 2, "channel_index": 2, "set": 2, "timestamp": 2, "samplespecif": 2, "target": 2, "sourc": [2, 3], "follow": 2, "f": [2, 7], "selector": 2, "configur": 2, "weight": [2, 3], "0": [2, 3, 5, 7], "x": [2, 5, 6, 7], "defin": [2, 3, 5], "comput": [2, 3, 5], "perform": [2, 3, 5], "everi": [2, 3, 5], "call": [2, 3, 5], "should": [2, 3, 5], "overridden": [2, 3, 5], "all": [2, 3, 5], "subclass": [2, 3, 5], "although": [2, 3, 5], "recip": [2, 3, 5], "pass": [2, 3, 5], "need": [2, 3, 5], "within": [2, 3, 5], "thi": [2, 3, 5], "function": [2, 3, 5], "one": [2, 3, 5], "instanc": [2, 3, 5], "afterward": [2, 3, 5], "instead": [2, 3, 5], "sinc": [2, 3, 5], "former": [2, 3, 5], "take": [2, 3, 5], "care": [2, 3, 5], "run": [2, 3, 5], "regist": [2, 3, 5], "hook": [2, 3, 5], "while": [2, 3, 5], "latter": [2, 3, 5], "silent": [2, 3, 5], "ignor": [2, 3, 5], "them": [2, 3, 5], "scale": 2, "fraction": 2, "normal": 2, "threepointscal": 2, "sampling_r": 2, "shift_rat": 2, "orig_freq": 2, "new_freq": 2, "stretch_rat": 2, "base_list": 2, "tag": 2, "top_db": 2, "30": 2, "frame_length": 2, "permut": 3, "reduct": 3, "mean": [3, 7], "note": 3, "attribut": 3, "each": 3, "i": 3, "dictionari": 3, "contain": 3, "func": 3, "param": 3, "y_pred": 3, "y_true": 3, "label": 3, "argmax": 3, "_embeddingloss": 3, "embd": [3, 5], "mode": [3, 5, 7], "deep_clust": 3, "deep": 3, "embd_dim": [3, 5, 6], "label_dim": 3, "loss_nam": 3, "loss_class": 3, "fft_spec": 3, "128": 3, "1024": 3, "256": 3, "_spectrogramloss": 3, "s_pred": 3, "s_true": 3, "spectral_convergence_weight": 3, "spectral_magnitude_weight": 3, "spectral_magnitude_norm": 3, "spectral_magnitude_log": 3, "true": [3, 5], "multiscal": 3, "_waveformloss": 3, "scale_invari": 3, "scale_depend": 3, "distort": 3, "ratio": 3, "baselinedecod": [4, 5], "forward_feature_s": [4, 5, 6], "forward_length": [4, 5], "parameter_list": [4, 5, 6], "reverse_length": [4, 5], "baselineencod": [4, 5], "codebookmask": [4, 5], "istftlay": [4, 5], "stftlayer": [4, 5], "sigmoidmask": [4, 5], "trainableistftlay": [4, 5], "trainablestftlay": [4, 5], "convblock": [4, 5], "convtasnetdecod": [4, 5], "convtasnetencod": [4, 5], "forward_channel": [4, 5], "bottleneckblock": [4, 5], "compressedresidualblock": [4, 5], "demucsdecod": [4, 5], "demucsencod": [4, 5], "localattent": [4, 5], "restrictedbilstm": [4, 5], "tdecoderblock": [4, 5], "tencoderblock": [4, 5], "zdecoderblock": [4, 5], "zencoderblock": [4, 5], "downsamplingblock": [4, 5], "interpol": [4, 5], "upsamplingblock": [4, 5], "waveunetdecod": [4, 5], "waveunetencod": [4, 5], "chimeranet": [4, 6], "forward_embd_dim": [4, 6], "forward_embd_featur": [4, 6], "forward_embd_length": [4, 6], "forward_wave_channel": [4, 6], "forward_wave_length": [4, 6], "reverse_wave_length": [4, 6], "embeddinghead": [4, 6], "forward_feature_dim": [4, 6], "encdecmodel": [4, 6], "save": 4, "optimizer_class": 4, "optimizer_arg": 4, "scheduler_class": 4, "scheduler_arg": 4, "get": 4, "model_class": 4, "epoch": [4, 7], "hyperparaemt": 4, "give": 4, "paramet": [4, 7], "its": 4, "klass": 4, "hyperparamet": [4, 6], "callabl": 4, "conv": 4, "conv1d": 4, "lstm_layer": [4, 5], "lstm": 4, "hidden_s": [4, 5], "module_class": 4, "t": [4, 7], "size": 4, "in_channel": 5, "out_channel": 5, "lstm_channel": 5, "magbook_s": 5, "phasebook_s": 5, "output_residu": 5, "lstm_out": 5, "l_in": [5, 6], "base_lr": [5, 6], "l_out": [5, 6], "n_lstm": 5, "mask_num": 5, "8": 5, "requires_grad": 5, "Not": 5, "trainabl": 5, "stft": 5, "layer": 5, "input": [5, 7], "n_channel": [5, 7], "2": 5, "time": 5, "output": [5, 7], "io_channel": 5, "block_channel": 5, "skipconnection_channel": 5, "kernel_s": 5, "dilat": 5, "encoder_in_channel": 5, "decoder_out_channel": 5, "feature_channel": 5, "base_featur": 5, "bottleneck_channel": 5, "depth": 5, "repeat": 5, "is_transpos": 5, "freq_dim": 5, "union": 5, "stride": 5, "norm_group": 5, "compress_lay": 5, "compress_channel": 5, "compress_kernel_s": 5, "compress_dilation_multipli": 5, "compress_lstm_lay": 5, "compress_lstm_span": 5, "compress_lstm_strid": 5, "compress_attention_head": 5, "compress_attention_pen": 5, "compress_init_scal": 5, "001": 5, "lstm_span": 5, "lstm_stride": 5, "local_attention_head": 5, "local_attention_pen": 5, "init_scal": 5, "mid_channel": 5, "inner_kernel_s": 5, "inner_strid": 5, "groupnorm_lay": 5, "groupnorm_group": 5, "4": 5, "trainable_stft": 5, "enc": 5, "t_enc": 5, "z_enc": 5, "embedding_lay": 5, "attention_lay": 5, "compress_channel_scal": 5, "200": 5, "100": 5, "num_head": 5, "num_pen": 5, "input_s": 5, "output_s": 5, "num_lay": 5, "span": 5, "channel_in": 5, "channel_out": 5, "downsample_r": 5, "convolut": 5, "downsampl": 5, "torch": [5, 6, 7], "shape": [5, 7], "n": [5, 7], "c_in": 5, "return": [5, 7], "c_out": 5, "ceil": 5, "rtype": 5, "desir": 5, "minimum": 5, "satisfi": 5, "block": 5, "upsample_r": 5, "nearest": 5, "must": 5, "channel_residu": 5, "interpolation_mod": 5, "upsampl": 5, "residu": 5, "r": 5, "k": 5, "upsampling_channel_in": 5, "upsampling_channel_out": 5, "upsampling_kernel_s": 5, "upsampling_r": 5, "upsampling_mod": 5, "upsampling_residual_channel": 5, "decoder_channel_out": 5, "decoder_kernel_s": 5, "decoder_residual_channel": 5, "encod": 5, "u": 5, "net": 5, "upsampling_residu": 5, "decoder_residu": 5, "decod": 5, "xesidu": 5, "returns_each": 5, "downsampling_channel_out": 5, "downsampling_kernel_s": 5, "downsampling_r": 5, "encoder_channel_out": 5, "encoder_kernel_s": 5, "encoder_class": 6, "decoder_class": 6, "in_featur": 6, "embd_featur": 6, "journal_pattern": 7, "log_pattern": 7, "overlap": 7, "embed": 7, "out_f": 7, "out_t": 7, "agg_fn": 7, "permutation_invari": 7, "window_num": 7, "channel_num": 7, "window_len": 7, "feature_num": 7, "median": 7, "output_length": 7, "model_epoch": 7, "training_epoch": 7, "training_loss": 7, "training_step_journ": 7, "validation_loss": 7, "validation_step_journ": 7, "checkpoint_path": 7, "training_dataset": 7, "training_sample_s": 7, "validation_dataset": 7, "validation_sample_s": 7, "checkpoint_pattern": 7, "loss_funct": 7, "32": 7, "compute_batch_s": 7, "max_grad_norm": 7, "process_at": 7, "step": 7, "sample_loss": 7, "batch_loss": 7, "total_grad": 7, "sample_metadata": 7, "logger": 7, "packag": [8, 9], "subpackag": [8, 9], "submodul": [8, 9], "lineag": [8, 9], "modul": [8, 9], "index": 8, "search": 8, "page": 8, "content": 9}, "objects": {"": [[0, 0, 0, "-", "echidna"]], "echidna": [[1, 0, 0, "-", "apps"], [2, 0, 0, "-", "data"], [0, 0, 0, "-", "lineage"], [3, 0, 0, "-", "metrics"], [4, 0, 0, "-", "models"], [7, 0, 0, "-", "procs"]], "echidna.apps": [[1, 0, 0, "-", "cluster"], [1, 0, 0, "-", "data_augmentations"], [1, 0, 0, "-", "data_mixtures"], [1, 0, 0, "-", "data_samples"], [1, 0, 0, "-", "separate"], [1, 0, 0, "-", "train"], [1, 0, 0, "-", "transcribe"], [1, 0, 0, "-", "utils"], [1, 0, 0, "-", "validate"]], "echidna.apps.cluster": [[1, 1, 1, "", "attach_parser"], [1, 1, 1, "", "main"]], "echidna.apps.data_augmentations": [[1, 1, 1, "", "attach_parser"], [1, 1, 1, "", "main"]], "echidna.apps.data_mixtures": [[1, 1, 1, "", "attach_parser"], [1, 1, 1, "", "main"]], "echidna.apps.data_samples": [[1, 1, 1, "", "attach_parser"], [1, 1, 1, "", "main"]], "echidna.apps.separate": [[1, 1, 1, "", "attach_parser"], [1, 1, 1, "", "main"]], "echidna.apps.train": [[1, 1, 1, "", "attach_parser"], [1, 1, 1, "", "main"]], "echidna.apps.transcribe": [[1, 1, 1, "", "attach_parser"], [1, 1, 1, "", "main"]], "echidna.apps.utils": [[1, 2, 1, "", "DatasourceAction"], [1, 2, 1, "", "LoadJSONAction"], [1, 1, 1, "", "make_config_action"], [1, 1, 1, "", "make_structure_action"]], "echidna.apps.validate": [[1, 1, 1, "", "attach_parser"], [1, 1, 1, "", "main"]], "echidna.data": [[2, 0, 0, "-", "augmentations"], [2, 0, 0, "-", "dataloaders"], [2, 0, 0, "-", "datanodes"], [2, 0, 0, "-", "datasets"], [2, 0, 0, "-", "difficulties"], [2, 0, 0, "-", "mixtures"], [2, 0, 0, "-", "samples"], [2, 0, 0, "-", "transforms"], [2, 0, 0, "-", "utils"]], "echidna.data.augmentations": [[2, 2, 1, "", "AugmentationNode"], [2, 2, 1, "", "AugmentationNodeJournal"], [2, 2, 1, "", "AugmentationSetJournal"], [2, 2, 1, "", "AugmentationSpec"], [2, 2, 1, "", "ChannelAugmentation"], [2, 2, 1, "", "ChannelAugmentationJournal"], [2, 2, 1, "", "SampleAugmentationJournal"]], "echidna.data.augmentations.AugmentationNode": [[2, 3, 1, "", "from_dict_args"], [2, 3, 1, "", "process_partial"], [2, 3, 1, "", "require_channel_index_partial"], [2, 4, 1, "", "super_type"], [2, 3, 1, "", "to_dict_args"]], "echidna.data.augmentations.AugmentationNodeJournal": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "to_dict"]], "echidna.data.augmentations.AugmentationSetJournal": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "to_dict"]], "echidna.data.augmentations.AugmentationSpec": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "save_augmentation"], [2, 3, 1, "", "to_dict"]], "echidna.data.augmentations.ChannelAugmentation": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "process_partial"], [2, 3, 1, "", "to_dict"]], "echidna.data.augmentations.ChannelAugmentationJournal": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "to_dict"]], "echidna.data.augmentations.SampleAugmentationJournal": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "to_dict"]], "echidna.data.dataloaders": [[2, 1, 1, "", "build_dataloader"], [2, 1, 1, "", "collate_fn"]], "echidna.data.datanodes": [[2, 2, 1, "", "DataNode"], [2, 2, 1, "", "EmptyNode"], [2, 1, 1, "", "add_datanode_cls"], [2, 1, 1, "", "get_datanode_cls"], [2, 1, 1, "", "get_datanode_name"]], "echidna.data.datanodes.DataNode": [[2, 3, 1, "", "balance_by_remove"], [2, 3, 1, "", "cleanup_index"], [2, 3, 1, "", "ensure_index_init"], [2, 3, 1, "", "from_dict"], [2, 3, 1, "", "from_dict_args"], [2, 3, 1, "", "get_metric"], [2, 3, 1, "", "get_single_chain"], [2, 3, 1, "", "index_not_initialized"], [2, 3, 1, "", "init_index"], [2, 3, 1, "", "list_leaf_node"], [2, 3, 1, "", "process"], [2, 3, 1, "", "process_partial"], [2, 3, 1, "", "process_single_chain"], [2, 3, 1, "", "push_metric"], [2, 3, 1, "", "require_channel_index_partial"], [2, 4, 1, "", "super_type"], [2, 3, 1, "", "to_dict"], [2, 3, 1, "", "to_dict_args"], [2, 3, 1, "", "to_dict_nochildren"]], "echidna.data.datanodes.EmptyNode": [[2, 3, 1, "", "from_dict_args"], [2, 4, 1, "", "super_type"], [2, 3, 1, "", "to_dict_args"]], "echidna.data.datasets": [[2, 2, 1, "", "Dataset"]], "echidna.data.datasets.Dataset": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "to_dict"]], "echidna.data.difficulties": [[2, 2, 1, "", "EntropyDifficulty"], [2, 2, 1, "", "FrequencyDifficulty"], [2, 2, 1, "", "MetricJournal"], [2, 2, 1, "", "MetricSetJournal"], [2, 2, 1, "", "MetricSpec"], [2, 1, 1, "", "add_metric_cls"], [2, 1, 1, "", "get_metric_cls"], [2, 1, 1, "", "get_metric_name"]], "echidna.data.difficulties.EntropyDifficulty": [[2, 3, 1, "", "additional_args"], [2, 3, 1, "", "metric_args"], [2, 3, 1, "", "put_single_metric"]], "echidna.data.difficulties.FrequencyDifficulty": [[2, 3, 1, "", "additional_args"], [2, 3, 1, "", "metric_args"], [2, 3, 1, "", "put_single_metric"]], "echidna.data.difficulties.MetricJournal": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "to_dict"]], "echidna.data.difficulties.MetricSetJournal": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "to_dict"]], "echidna.data.difficulties.MetricSpec": [[2, 3, 1, "", "additional_args"], [2, 3, 1, "", "from_dict"], [2, 3, 1, "", "metric_args"], [2, 3, 1, "", "put_metrics"], [2, 3, 1, "", "put_single_metric"], [2, 3, 1, "", "to_dict"]], "echidna.data.mixtures": [[2, 2, 1, "", "MixJournal"], [2, 2, 1, "", "MixNode"], [2, 2, 1, "", "MixSetJournal"], [2, 2, 1, "", "MixSetSpec"]], "echidna.data.mixtures.MixJournal": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "to_dict"]], "echidna.data.mixtures.MixNode": [[2, 3, 1, "", "from_dict_args"], [2, 3, 1, "", "process_partial"], [2, 3, 1, "", "require_channel_index_partial"], [2, 4, 1, "", "super_type"], [2, 3, 1, "", "to_dict_args"]], "echidna.data.mixtures.MixSetJournal": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "to_dict"]], "echidna.data.mixtures.MixSetSpec": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "save_mixture"], [2, 3, 1, "", "to_dict"]], "echidna.data.samples": [[2, 2, 1, "", "Channel"], [2, 2, 1, "", "ChannelJournal"], [2, 2, 1, "", "Datasource"], [2, 2, 1, "", "SampleJournal"], [2, 2, 1, "", "SampleNode"], [2, 2, 1, "", "SampleSetJournal"], [2, 2, 1, "", "SampleSpec"]], "echidna.data.samples.Channel": [[2, 3, 1, "", "from_dict"], [2, 3, 1, "", "from_list"], [2, 3, 1, "", "to_dict"]], "echidna.data.samples.ChannelJournal": [[2, 5, 1, "", "channel"], [2, 5, 1, "", "created_at"], [2, 5, 1, "", "datasources"], [2, 3, 1, "", "from_dict"], [2, 5, 1, "", "length"], [2, 5, 1, "", "offset"], [2, 5, 1, "", "seed"], [2, 3, 1, "", "to_dict"]], "echidna.data.samples.Datasource": [[2, 5, 1, "", "category"], [2, 5, 1, "", "fold"], [2, 3, 1, "", "from_dict"], [2, 5, 1, "", "id"], [2, 5, 1, "", "sheet_path"], [2, 3, 1, "", "to_dict"], [2, 5, 1, "", "track"], [2, 5, 1, "", "wave_path"]], "echidna.data.samples.SampleJournal": [[2, 5, 1, "", "channel_journals"], [2, 5, 1, "", "created_at"], [2, 3, 1, "", "from_dict"], [2, 5, 1, "", "sample"], [2, 5, 1, "", "seed"], [2, 3, 1, "", "to_dict"]], "echidna.data.samples.SampleNode": [[2, 3, 1, "", "from_dict_args"], [2, 3, 1, "", "process_partial"], [2, 3, 1, "", "require_channel_index_partial"], [2, 4, 1, "", "super_type"], [2, 3, 1, "", "to_dict_args"]], "echidna.data.samples.SampleSetJournal": [[2, 3, 1, "", "from_dict"], [2, 5, 1, "", "metadata_path"], [2, 5, 1, "", "process_finish"], [2, 5, 1, "", "process_start"], [2, 5, 1, "", "sample_journals"], [2, 5, 1, "", "seed"], [2, 5, 1, "", "spec"], [2, 3, 1, "", "to_dict"]], "echidna.data.samples.SampleSpec": [[2, 5, 1, "", "category_map"], [2, 5, 1, "", "data_dir"], [2, 5, 1, "", "datasources"], [2, 5, 1, "", "duration"], [2, 5, 1, "", "fold"], [2, 3, 1, "", "from_dict"], [2, 5, 1, "", "jobs"], [2, 5, 1, "", "journal_path"], [2, 5, 1, "", "log_level"], [2, 5, 1, "", "log_path"], [2, 5, 1, "", "metadata_path"], [2, 5, 1, "", "sample_rate"], [2, 5, 1, "", "sample_size"], [2, 3, 1, "", "save_samples"], [2, 5, 1, "", "seed"], [2, 5, 1, "", "target_db"], [2, 3, 1, "", "to_dict"]], "echidna.data.transforms": [[2, 2, 1, "", "Compose"], [2, 2, 1, "", "Crop"], [2, 2, 1, "", "MultiPointScale"], [2, 2, 1, "", "PitchShift"], [2, 2, 1, "", "Resample"], [2, 2, 1, "", "TimeStretch"], [2, 2, 1, "", "TimeStretchAndPitchShift"], [2, 1, 1, "", "build_transform"]], "echidna.data.transforms.Compose": [[2, 3, 1, "", "forward"]], "echidna.data.transforms.Crop": [[2, 3, 1, "", "forward"]], "echidna.data.transforms.MultiPointScale": [[2, 3, 1, "", "forward"]], "echidna.data.transforms.PitchShift": [[2, 3, 1, "", "forward"]], "echidna.data.transforms.Resample": [[2, 3, 1, "", "forward"]], "echidna.data.transforms.TimeStretch": [[2, 3, 1, "", "forward"]], "echidna.data.transforms.TimeStretchAndPitchShift": [[2, 3, 1, "", "forward"]], "echidna.data.utils": [[2, 1, 1, "", "merge_activation"]], "echidna.metrics": [[3, 0, 0, "-", "composite"], [3, 0, 0, "-", "deepclustering"], [3, 0, 0, "-", "loss"], [3, 0, 0, "-", "spectrogram"], [3, 0, 0, "-", "waveform"]], "echidna.metrics.composite": [[3, 2, 1, "", "CompositeLoss"]], "echidna.metrics.composite.CompositeLoss": [[3, 5, 1, "", "components"], [3, 4, 1, "", "domains"], [3, 3, 1, "", "forward"], [3, 3, 1, "", "forward_no_reduction"], [3, 3, 1, "", "from_dict_args"], [3, 3, 1, "", "to_dict_args"]], "echidna.metrics.deepclustering": [[3, 2, 1, "", "DeepClusteringLoss"], [3, 2, 1, "", "DeepLDALoss"], [3, 2, 1, "", "GraphLaplacianLoss"], [3, 2, 1, "", "WhitenedKMeansLoss"], [3, 1, 1, "", "deep_clustering_loss"]], "echidna.metrics.loss": [[3, 2, 1, "", "Loss"], [3, 1, 1, "", "get_loss_class"], [3, 1, 1, "", "get_loss_name"], [3, 1, 1, "", "register_loss_class"]], "echidna.metrics.loss.Loss": [[3, 4, 1, "", "domains"], [3, 3, 1, "", "forward"], [3, 3, 1, "", "forward_no_reduction"], [3, 3, 1, "", "from_dict"], [3, 3, 1, "", "from_dict_args"], [3, 3, 1, "", "to_dict"], [3, 3, 1, "", "to_dict_args"]], "echidna.metrics.spectrogram": [[3, 2, 1, "", "L1SpectrogramLoss"], [3, 2, 1, "", "L2SpectrogramLoss"], [3, 2, 1, "", "SpectrogramConvergenceLoss"], [3, 2, 1, "", "SpectrogramLoss"], [3, 1, 1, "", "multiscale_spectrogram_loss"]], "echidna.metrics.spectrogram.L1SpectrogramLoss": [[3, 3, 1, "", "forward_no_reduction"]], "echidna.metrics.spectrogram.L2SpectrogramLoss": [[3, 3, 1, "", "forward_no_reduction"]], "echidna.metrics.spectrogram.SpectrogramConvergenceLoss": [[3, 3, 1, "", "forward_no_reduction"]], "echidna.metrics.spectrogram.SpectrogramLoss": [[3, 4, 1, "", "domains"], [3, 3, 1, "", "forward_no_reduction"], [3, 3, 1, "", "from_dict_args"], [3, 3, 1, "", "to_dict_args"]], "echidna.metrics.waveform": [[3, 2, 1, "", "L1WaveformLoss"], [3, 2, 1, "", "L2WaveformLoss"], [3, 2, 1, "", "NegativeSDRLoss"], [3, 2, 1, "", "NegativeSDSDRLoss"], [3, 2, 1, "", "NegativeSISDRLoss"], [3, 1, 1, "", "source_to_distortion_ratio"]], "echidna.metrics.waveform.L1WaveformLoss": [[3, 3, 1, "", "forward_no_reduction"]], "echidna.metrics.waveform.L2WaveformLoss": [[3, 3, 1, "", "forward_no_reduction"]], "echidna.metrics.waveform.NegativeSDRLoss": [[3, 3, 1, "", "forward_no_reduction"]], "echidna.metrics.waveform.NegativeSDSDRLoss": [[3, 3, 1, "", "forward_no_reduction"]], "echidna.metrics.waveform.NegativeSISDRLoss": [[3, 3, 1, "", "forward_no_reduction"]], "echidna.models": [[4, 0, 0, "-", "checkpoints"], [5, 0, 0, "-", "core"], [4, 0, 0, "-", "models"], [6, 0, 0, "-", "multidomain"], [4, 0, 0, "-", "nest"], [4, 0, 0, "-", "utils"]], "echidna.models.checkpoints": [[4, 2, 1, "", "Checkpoint"], [4, 2, 1, "", "InitialCheckpoint"], [4, 2, 1, "", "SavedCheckpoint"], [4, 1, 1, "", "get_optimizer_class"], [4, 1, 1, "", "get_scheduler_class"]], "echidna.models.checkpoints.Checkpoint": [[4, 3, 1, "", "from_dict"], [4, 3, 1, "", "get_epoch"], [4, 3, 1, "", "get_model"], [4, 3, 1, "", "get_model_class"], [4, 3, 1, "", "get_model_hyperparameters"], [4, 3, 1, "", "get_optimizer_class"], [4, 3, 1, "", "get_optimizer_hyperparameters"], [4, 3, 1, "", "get_scheduler_class"], [4, 3, 1, "", "get_scheduler_hyperparameters"], [4, 3, 1, "", "get_torch_model"], [4, 3, 1, "", "get_torch_optimizer"], [4, 3, 1, "", "get_torch_scheduler"], [4, 3, 1, "", "save_torch_checkpoint"], [4, 3, 1, "", "to_dict"], [4, 3, 1, "", "to_dict_args"]], "echidna.models.checkpoints.InitialCheckpoint": [[4, 3, 1, "", "from_dict_args"], [4, 3, 1, "", "get_model"], [4, 3, 1, "", "get_optimizer_class"], [4, 3, 1, "", "get_optimizer_hyperparameters"], [4, 3, 1, "", "get_scheduler_class"], [4, 3, 1, "", "get_scheduler_hyperparameters"], [4, 3, 1, "", "get_torch_optimizer"], [4, 3, 1, "", "get_torch_scheduler"], [4, 3, 1, "", "to_dict_args"]], "echidna.models.checkpoints.SavedCheckpoint": [[4, 3, 1, "", "from_dict_args"], [4, 3, 1, "", "get_model"], [4, 3, 1, "", "get_optimizer_class"], [4, 3, 1, "", "get_optimizer_hyperparameters"], [4, 3, 1, "", "get_scheduler_class"], [4, 3, 1, "", "get_scheduler_hyperparameters"], [4, 3, 1, "", "get_torch_optimizer"], [4, 3, 1, "", "get_torch_scheduler"], [4, 3, 1, "", "to_dict_args"]], "echidna.models.core": [[5, 0, 0, "-", "baseline"], [5, 0, 0, "-", "commonlayers"], [5, 0, 0, "-", "convtasnet"], [5, 0, 0, "-", "demucs"], [5, 0, 0, "-", "waveunet"]], "echidna.models.core.baseline": [[5, 2, 1, "", "BaselineDecoder"], [5, 2, 1, "", "BaselineEncoder"]], "echidna.models.core.baseline.BaselineDecoder": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_feature_size"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "parameter_list"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.baseline.BaselineEncoder": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_feature_size"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "parameter_list"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.commonlayers": [[5, 2, 1, "", "CodebookMask"], [5, 2, 1, "", "ISTFTLayer"], [5, 2, 1, "", "STFTLayer"], [5, 2, 1, "", "SigmoidMask"], [5, 2, 1, "", "TrainableISTFTLayer"], [5, 2, 1, "", "TrainableSTFTLayer"]], "echidna.models.core.commonlayers.CodebookMask": [[5, 3, 1, "", "forward"]], "echidna.models.core.commonlayers.ISTFTLayer": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.commonlayers.STFTLayer": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.commonlayers.SigmoidMask": [[5, 3, 1, "", "forward"]], "echidna.models.core.commonlayers.TrainableISTFTLayer": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.commonlayers.TrainableSTFTLayer": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.convtasnet": [[5, 2, 1, "", "ConvBlock"], [5, 2, 1, "", "ConvTasNetDecoder"], [5, 2, 1, "", "ConvTasNetEncoder"]], "echidna.models.core.convtasnet.ConvBlock": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.convtasnet.ConvTasNetDecoder": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_feature_size"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "parameter_list"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.convtasnet.ConvTasNetEncoder": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_channel"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "parameter_list"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.demucs": [[5, 2, 1, "", "BottleneckBlock"], [5, 2, 1, "", "CompressedResidualBlock"], [5, 2, 1, "", "DemucsDecoder"], [5, 2, 1, "", "DemucsEncoder"], [5, 2, 1, "", "LocalAttention"], [5, 2, 1, "", "RestrictedBiLSTM"], [5, 1, 1, "", "TDecoderBlock"], [5, 1, 1, "", "TEncoderBlock"], [5, 1, 1, "", "ZDecoderBlock"], [5, 1, 1, "", "ZEncoderBlock"]], "echidna.models.core.demucs.BottleneckBlock": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.demucs.CompressedResidualBlock": [[5, 3, 1, "", "forward"]], "echidna.models.core.demucs.DemucsDecoder": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_feature_size"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "parameter_list"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.demucs.DemucsEncoder": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_feature_size"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "parameter_list"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.demucs.LocalAttention": [[5, 3, 1, "", "forward"]], "echidna.models.core.demucs.RestrictedBiLSTM": [[5, 3, 1, "", "forward"]], "echidna.models.core.waveunet": [[5, 2, 1, "", "DownsamplingBlock"], [5, 2, 1, "", "Interpolation"], [5, 2, 1, "", "UpsamplingBlock"], [5, 2, 1, "", "WaveUNetDecoder"], [5, 2, 1, "", "WaveUNetEncoder"]], "echidna.models.core.waveunet.DownsamplingBlock": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.waveunet.Interpolation": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.waveunet.UpsamplingBlock": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.waveunet.WaveUNetDecoder": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_feature_size"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "parameter_list"], [5, 3, 1, "", "reverse_length"]], "echidna.models.core.waveunet.WaveUNetEncoder": [[5, 3, 1, "", "forward"], [5, 3, 1, "", "forward_feature_size"], [5, 3, 1, "", "forward_length"], [5, 3, 1, "", "parameter_list"], [5, 3, 1, "", "reverse_length"]], "echidna.models.models": [[4, 2, 1, "", "CheckpointModel"], [4, 2, 1, "", "InitialModel"], [4, 2, 1, "", "Model"], [4, 2, 1, "", "SavedModel"], [4, 1, 1, "", "get_model_class"], [4, 1, 1, "", "register_model_class"]], "echidna.models.models.CheckpointModel": [[4, 3, 1, "", "from_dict_args"], [4, 3, 1, "", "get_class"], [4, 3, 1, "", "get_epoch"], [4, 3, 1, "", "get_hyperparameters"], [4, 3, 1, "", "get_torch_model"], [4, 3, 1, "", "to_dict_args"]], "echidna.models.models.InitialModel": [[4, 3, 1, "", "from_dict_args"], [4, 3, 1, "", "get_class"], [4, 3, 1, "", "get_hyperparameters"], [4, 3, 1, "", "get_torch_model"], [4, 3, 1, "", "to_dict_args"]], "echidna.models.models.Model": [[4, 3, 1, "", "from_dict"], [4, 3, 1, "", "get_class"], [4, 3, 1, "", "get_epoch"], [4, 3, 1, "", "get_hyperparameters"], [4, 3, 1, "", "get_torch_model"], [4, 3, 1, "", "save_torch_model"], [4, 3, 1, "", "to_dict"], [4, 3, 1, "", "to_dict_args"]], "echidna.models.models.SavedModel": [[4, 3, 1, "", "from_dict_args"], [4, 3, 1, "", "get_class"], [4, 3, 1, "", "get_epoch"], [4, 3, 1, "", "get_hyperparameters"], [4, 3, 1, "", "get_torch_model"], [4, 3, 1, "", "to_dict_args"]], "echidna.models.multidomain": [[6, 0, 0, "-", "cerberus"], [6, 0, 0, "-", "chimera"], [6, 0, 0, "-", "encdec"]], "echidna.models.multidomain.chimera": [[6, 2, 1, "", "ChimeraNet"], [6, 2, 1, "", "EmbeddingHead"]], "echidna.models.multidomain.chimera.ChimeraNet": [[6, 3, 1, "", "forward"], [6, 3, 1, "", "forward_embd_dim"], [6, 3, 1, "", "forward_embd_feature"], [6, 3, 1, "", "forward_embd_length"], [6, 3, 1, "", "forward_wave_channel"], [6, 3, 1, "", "forward_wave_length"], [6, 3, 1, "", "parameter_list"], [6, 3, 1, "", "reverse_wave_length"]], "echidna.models.multidomain.chimera.EmbeddingHead": [[6, 3, 1, "", "forward"], [6, 3, 1, "", "forward_feature_dim"], [6, 3, 1, "", "forward_feature_size"]], "echidna.models.multidomain.encdec": [[6, 2, 1, "", "EncDecModel"]], "echidna.models.multidomain.encdec.EncDecModel": [[6, 3, 1, "", "forward"], [6, 3, 1, "", "forward_embd_dim"], [6, 3, 1, "", "forward_embd_feature"], [6, 3, 1, "", "forward_embd_length"], [6, 3, 1, "", "forward_wave_channel"], [6, 3, 1, "", "forward_wave_length"], [6, 3, 1, "", "parameter_list"], [6, 3, 1, "", "reverse_wave_length"]], "echidna.models.nest": [[4, 1, 1, "", "BaselineChimeraNet"], [4, 1, 1, "", "BaselineEncDecModel"], [4, 1, 1, "", "ConvTasNetChimeraNet"], [4, 1, 1, "", "ConvTasNetEncDecModel"], [4, 1, 1, "", "DemucsChimeraNet"], [4, 1, 1, "", "DemucsEncDecModel"], [4, 1, 1, "", "WaveUNetChimeraNet"], [4, 1, 1, "", "WaveUNetEncDecModel"]], "echidna.models.utils": [[4, 1, 1, "", "generate_dft_matrix"], [4, 1, 1, "", "init_conv_weight"], [4, 1, 1, "", "init_lstm_weight"], [4, 1, 1, "", "init_module"], [4, 1, 1, "", "match_length"]], "echidna.procs": [[7, 0, 0, "-", "clusterings"], [7, 0, 0, "-", "separations"], [7, 0, 0, "-", "trainings"], [7, 0, 0, "-", "transcriptions"], [7, 0, 0, "-", "utils"], [7, 0, 0, "-", "validations"]], "echidna.procs.clusterings": [[7, 2, 1, "", "ClusteringJournal"], [7, 2, 1, "", "ClusteringSpec"], [7, 1, 1, "", "mask_from_embedding"], [7, 1, 1, "", "merge_windows"], [7, 1, 1, "", "split_into_windows"]], "echidna.procs.clusterings.ClusteringJournal": [[7, 3, 1, "", "from_dict"], [7, 3, 1, "", "to_dict"]], "echidna.procs.clusterings.ClusteringSpec": [[7, 3, 1, "", "cluster"], [7, 3, 1, "", "from_dict"], [7, 3, 1, "", "to_dict"]], "echidna.procs.separations": [[7, 2, 1, "", "SeparationJournal"], [7, 2, 1, "", "SeparationSpec"], [7, 1, 1, "", "merge_windows"], [7, 1, 1, "", "split_into_windows"]], "echidna.procs.separations.SeparationJournal": [[7, 3, 1, "", "from_dict"], [7, 3, 1, "", "to_dict"]], "echidna.procs.separations.SeparationSpec": [[7, 3, 1, "", "from_dict"], [7, 3, 1, "", "separate"], [7, 3, 1, "", "to_dict"]], "echidna.procs.trainings": [[7, 2, 1, "", "EpochJournal"], [7, 2, 1, "", "TrainingSpec"]], "echidna.procs.trainings.EpochJournal": [[7, 3, 1, "", "from_dict"], [7, 3, 1, "", "to_dict"]], "echidna.procs.trainings.TrainingSpec": [[7, 3, 1, "", "from_dict"], [7, 3, 1, "", "to_dict"], [7, 3, 1, "", "train"]], "echidna.procs.transcriptions": [[7, 2, 1, "", "TranscriptionJournal"], [7, 2, 1, "", "TranscriptionSpec"]], "echidna.procs.transcriptions.TranscriptionSpec": [[7, 3, 1, "", "transcribe"]], "echidna.procs.utils": [[7, 2, 1, "", "StepJournal"], [7, 1, 1, "", "process_batch"]], "echidna.procs.utils.StepJournal": [[7, 3, 1, "", "from_dict"], [7, 3, 1, "", "to_dict"]], "echidna.procs.validations": [[7, 2, 1, "", "ValidationJournal"], [7, 2, 1, "", "ValidationSpec"]], "echidna.procs.validations.ValidationJournal": [[7, 3, 1, "", "from_dict"], [7, 3, 1, "", "to_dict"]], "echidna.procs.validations.ValidationSpec": [[7, 3, 1, "", "from_dict"], [7, 3, 1, "", "to_dict"], [7, 3, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"echidna": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "packag": [0, 1, 2, 3, 4, 5, 6, 7], "subpackag": [0, 4], "submodul": [0, 1, 2, 3, 4, 5, 6, 7], "lineag": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8], "app": 1, "cluster": [1, 7], "data_augment": 1, "data_mixtur": 1, "data_sampl": 1, "separ": [1, 7], "train": [1, 7], "transcrib": 1, "util": [1, 2, 4, 7], "valid": [1, 7], "data": 2, "augment": 2, "dataload": 2, "datanod": 2, "dataset": 2, "difficulti": 2, "mixtur": 2, "sampl": 2, "transform": 2, "metric": 3, "composit": 3, "deepclust": 3, "loss": 3, "spectrogram": 3, "waveform": 3, "model": [4, 5, 6], "checkpoint": 4, "nest": 4, "core": 5, "baselin": 5, "commonlay": 5, "convtasnet": 5, "demuc": 5, "waveunet": 5, "paramet": [5, 6], "multidomain": 6, "cerberu": 6, "chimera": 6, "encdec": 6, "proc": 7, "transcript": 7, "welcom": 8, "": 8, "document": 8, "indic": 8, "tabl": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"echidna package": [[0, "echidna-package"]], "Subpackages": [[0, "subpackages"], [4, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"]], "echidna.lineage module": [[0, "module-echidna.lineage"]], "Module contents": [[0, "module-echidna"], [1, "module-echidna.apps"], [2, "module-echidna.data"], [3, "module-echidna.metrics"], [4, "module-echidna.models"], [5, "module-echidna.models.core"], [6, "module-echidna.models.multidomain"], [7, "module-echidna.procs"]], "echidna.apps package": [[1, "echidna-apps-package"]], "echidna.apps.cluster module": [[1, "module-echidna.apps.cluster"]], "echidna.apps.data_augmentations module": [[1, "module-echidna.apps.data_augmentations"]], "echidna.apps.data_mixtures module": [[1, "module-echidna.apps.data_mixtures"]], "echidna.apps.data_samples module": [[1, "module-echidna.apps.data_samples"]], "echidna.apps.separate module": [[1, "module-echidna.apps.separate"]], "echidna.apps.train module": [[1, "module-echidna.apps.train"]], "echidna.apps.transcribe module": [[1, "module-echidna.apps.transcribe"]], "echidna.apps.utils module": [[1, "module-echidna.apps.utils"]], "echidna.apps.validate module": [[1, "module-echidna.apps.validate"]], "echidna.data package": [[2, "echidna-data-package"]], "echidna.data.augmentations module": [[2, "module-echidna.data.augmentations"]], "echidna.data.dataloaders module": [[2, "module-echidna.data.dataloaders"]], "echidna.data.datanodes module": [[2, "module-echidna.data.datanodes"]], "echidna.data.datasets module": [[2, "module-echidna.data.datasets"]], "echidna.data.difficulties module": [[2, "module-echidna.data.difficulties"]], "echidna.data.mixtures module": [[2, "module-echidna.data.mixtures"]], "echidna.data.samples module": [[2, "module-echidna.data.samples"]], "echidna.data.transforms module": [[2, "module-echidna.data.transforms"]], "echidna.data.utils module": [[2, "module-echidna.data.utils"]], "echidna.metrics package": [[3, "echidna-metrics-package"]], "echidna.metrics.composite module": [[3, "module-echidna.metrics.composite"]], "echidna.metrics.deepclustering module": [[3, "module-echidna.metrics.deepclustering"]], "echidna.metrics.loss module": [[3, "module-echidna.metrics.loss"]], "echidna.metrics.spectrogram module": [[3, "module-echidna.metrics.spectrogram"]], "echidna.metrics.waveform module": [[3, "module-echidna.metrics.waveform"]], "echidna.models package": [[4, "echidna-models-package"]], "echidna.models.checkpoints module": [[4, "module-echidna.models.checkpoints"]], "echidna.models.models module": [[4, "module-echidna.models.models"]], "echidna.models.nest module": [[4, "module-echidna.models.nest"]], "echidna.models.utils module": [[4, "module-echidna.models.utils"]], "echidna.models.core package": [[5, "echidna-models-core-package"]], "echidna.models.core.baseline module": [[5, "module-echidna.models.core.baseline"]], "echidna.models.core.commonlayers module": [[5, "module-echidna.models.core.commonlayers"]], "echidna.models.core.convtasnet module": [[5, "module-echidna.models.core.convtasnet"]], "echidna.models.core.demucs module": [[5, "module-echidna.models.core.demucs"]], "echidna.models.core.waveunet module": [[5, "module-echidna.models.core.waveunet"]], "Parameter": [[5, "parameter"], [5, "id1"], [5, "id2"], [5, "id3"], [5, "id4"], [5, "id5"], [5, "id6"], [5, "id7"], [5, "id8"], [5, "id9"], [5, "id10"], [5, "id11"], [5, "id12"], [5, "id13"], [6, "parameter"], [6, "id1"], [6, "id2"], [6, "id3"], [6, "id4"], [6, "id5"], [6, "id6"]], "echidna.models.multidomain package": [[6, "echidna-models-multidomain-package"]], "echidna.models.multidomain.cerberus module": [[6, "module-echidna.models.multidomain.cerberus"]], "echidna.models.multidomain.chimera module": [[6, "module-echidna.models.multidomain.chimera"]], "echidna.models.multidomain.encdec module": [[6, "module-echidna.models.multidomain.encdec"]], "echidna.procs package": [[7, "echidna-procs-package"]], "echidna.procs.clusterings module": [[7, "module-echidna.procs.clusterings"]], "echidna.procs.separations module": [[7, "module-echidna.procs.separations"]], "echidna.procs.trainings module": [[7, "module-echidna.procs.trainings"]], "echidna.procs.transcriptions module": [[7, "module-echidna.procs.transcriptions"]], "echidna.procs.utils module": [[7, "module-echidna.procs.utils"]], "echidna.procs.validations module": [[7, "module-echidna.procs.validations"]], "Welcome to echidna\u2019s documentation!": [[8, "welcome-to-echidna-s-documentation"]], "Contents:": [[8, null]], "Indices and tables": [[8, "indices-and-tables"]], "echidna": [[9, "echidna"]]}, "indexentries": {"echidna": [[0, "module-echidna"]], "echidna.lineage": [[0, "module-echidna.lineage"]], "module": [[0, "module-echidna"], [0, "module-echidna.lineage"], [1, "module-echidna.apps"], [1, "module-echidna.apps.cluster"], [1, "module-echidna.apps.data_augmentations"], [1, "module-echidna.apps.data_mixtures"], [1, "module-echidna.apps.data_samples"], [1, "module-echidna.apps.separate"], [1, "module-echidna.apps.train"], [1, "module-echidna.apps.transcribe"], [1, "module-echidna.apps.utils"], [1, "module-echidna.apps.validate"], [2, "module-echidna.data"], [2, "module-echidna.data.augmentations"], [2, "module-echidna.data.dataloaders"], [2, "module-echidna.data.datanodes"], [2, "module-echidna.data.datasets"], [2, "module-echidna.data.difficulties"], [2, "module-echidna.data.mixtures"], [2, "module-echidna.data.samples"], [2, "module-echidna.data.transforms"], [2, "module-echidna.data.utils"], [3, "module-echidna.metrics"], [3, "module-echidna.metrics.composite"], [3, "module-echidna.metrics.deepclustering"], [3, "module-echidna.metrics.loss"], [3, "module-echidna.metrics.spectrogram"], [3, "module-echidna.metrics.waveform"], [4, "module-echidna.models"], [4, "module-echidna.models.checkpoints"], [4, "module-echidna.models.models"], [4, "module-echidna.models.nest"], [4, "module-echidna.models.utils"], [5, "module-echidna.models.core"], [5, "module-echidna.models.core.baseline"], [5, "module-echidna.models.core.commonlayers"], [5, "module-echidna.models.core.convtasnet"], [5, "module-echidna.models.core.demucs"], [5, "module-echidna.models.core.waveunet"], [6, "module-echidna.models.multidomain"], [6, "module-echidna.models.multidomain.cerberus"], [6, "module-echidna.models.multidomain.chimera"], [6, "module-echidna.models.multidomain.encdec"], [7, "module-echidna.procs"], [7, "module-echidna.procs.clusterings"], [7, "module-echidna.procs.separations"], [7, "module-echidna.procs.trainings"], [7, "module-echidna.procs.transcriptions"], [7, "module-echidna.procs.utils"], [7, "module-echidna.procs.validations"]], "datasourceaction (class in echidna.apps.utils)": [[1, "echidna.apps.utils.DatasourceAction"]], "loadjsonaction (class in echidna.apps.utils)": [[1, "echidna.apps.utils.LoadJSONAction"]], "attach_parser() (in module echidna.apps.cluster)": [[1, "echidna.apps.cluster.attach_parser"]], "attach_parser() (in module echidna.apps.data_augmentations)": [[1, "echidna.apps.data_augmentations.attach_parser"]], "attach_parser() (in module echidna.apps.data_mixtures)": [[1, "echidna.apps.data_mixtures.attach_parser"]], "attach_parser() (in module echidna.apps.data_samples)": [[1, "echidna.apps.data_samples.attach_parser"]], "attach_parser() (in module echidna.apps.separate)": [[1, "echidna.apps.separate.attach_parser"]], "attach_parser() (in module echidna.apps.train)": [[1, "echidna.apps.train.attach_parser"]], "attach_parser() (in module echidna.apps.transcribe)": [[1, "echidna.apps.transcribe.attach_parser"]], "attach_parser() (in module echidna.apps.validate)": [[1, "echidna.apps.validate.attach_parser"]], "echidna.apps": [[1, "module-echidna.apps"]], "echidna.apps.cluster": [[1, "module-echidna.apps.cluster"]], "echidna.apps.data_augmentations": [[1, "module-echidna.apps.data_augmentations"]], "echidna.apps.data_mixtures": [[1, "module-echidna.apps.data_mixtures"]], "echidna.apps.data_samples": [[1, "module-echidna.apps.data_samples"]], "echidna.apps.separate": [[1, "module-echidna.apps.separate"]], "echidna.apps.train": [[1, "module-echidna.apps.train"]], "echidna.apps.transcribe": [[1, "module-echidna.apps.transcribe"]], "echidna.apps.utils": [[1, "module-echidna.apps.utils"]], "echidna.apps.validate": [[1, "module-echidna.apps.validate"]], "main() (in module echidna.apps.cluster)": [[1, "echidna.apps.cluster.main"]], "main() (in module echidna.apps.data_augmentations)": [[1, "echidna.apps.data_augmentations.main"]], "main() (in module echidna.apps.data_mixtures)": [[1, "echidna.apps.data_mixtures.main"]], "main() (in module echidna.apps.data_samples)": [[1, "echidna.apps.data_samples.main"]], "main() (in module echidna.apps.separate)": [[1, "echidna.apps.separate.main"]], "main() (in module echidna.apps.train)": [[1, "echidna.apps.train.main"]], "main() (in module echidna.apps.transcribe)": [[1, "echidna.apps.transcribe.main"]], "main() (in module echidna.apps.validate)": [[1, "echidna.apps.validate.main"]], "make_config_action() (in module echidna.apps.utils)": [[1, "echidna.apps.utils.make_config_action"]], "make_structure_action() (in module echidna.apps.utils)": [[1, "echidna.apps.utils.make_structure_action"]], "augmentationnode (class in echidna.data.augmentations)": [[2, "echidna.data.augmentations.AugmentationNode"]], "augmentationnodejournal (class in echidna.data.augmentations)": [[2, "echidna.data.augmentations.AugmentationNodeJournal"]], "augmentationsetjournal (class in echidna.data.augmentations)": [[2, "echidna.data.augmentations.AugmentationSetJournal"]], "augmentationspec (class in echidna.data.augmentations)": [[2, "echidna.data.augmentations.AugmentationSpec"]], "channel (class in echidna.data.samples)": [[2, "echidna.data.samples.Channel"]], "channelaugmentation (class in echidna.data.augmentations)": [[2, "echidna.data.augmentations.ChannelAugmentation"]], "channelaugmentationjournal (class in echidna.data.augmentations)": [[2, "echidna.data.augmentations.ChannelAugmentationJournal"]], "channeljournal (class in echidna.data.samples)": [[2, "echidna.data.samples.ChannelJournal"]], "compose (class in echidna.data.transforms)": [[2, "echidna.data.transforms.Compose"]], "crop (class in echidna.data.transforms)": [[2, "echidna.data.transforms.Crop"]], "datanode (class in echidna.data.datanodes)": [[2, "echidna.data.datanodes.DataNode"]], "dataset (class in echidna.data.datasets)": [[2, "echidna.data.datasets.Dataset"]], "datasource (class in echidna.data.samples)": [[2, "echidna.data.samples.Datasource"]], "emptynode (class in echidna.data.datanodes)": [[2, "echidna.data.datanodes.EmptyNode"]], "entropydifficulty (class in echidna.data.difficulties)": [[2, "echidna.data.difficulties.EntropyDifficulty"]], "frequencydifficulty (class in echidna.data.difficulties)": [[2, "echidna.data.difficulties.FrequencyDifficulty"]], "metricjournal (class in echidna.data.difficulties)": [[2, "echidna.data.difficulties.MetricJournal"]], "metricsetjournal (class in echidna.data.difficulties)": [[2, "echidna.data.difficulties.MetricSetJournal"]], "metricspec (class in echidna.data.difficulties)": [[2, "echidna.data.difficulties.MetricSpec"]], "mixjournal (class in echidna.data.mixtures)": [[2, "echidna.data.mixtures.MixJournal"]], "mixnode (class in echidna.data.mixtures)": [[2, "echidna.data.mixtures.MixNode"]], "mixsetjournal (class in echidna.data.mixtures)": [[2, "echidna.data.mixtures.MixSetJournal"]], "mixsetspec (class in echidna.data.mixtures)": [[2, "echidna.data.mixtures.MixSetSpec"]], "multipointscale (class in echidna.data.transforms)": [[2, "echidna.data.transforms.MultiPointScale"]], "pitchshift (class in echidna.data.transforms)": [[2, "echidna.data.transforms.PitchShift"]], "resample (class in echidna.data.transforms)": [[2, "echidna.data.transforms.Resample"]], "sampleaugmentationjournal (class in echidna.data.augmentations)": [[2, "echidna.data.augmentations.SampleAugmentationJournal"]], "samplejournal (class in echidna.data.samples)": [[2, "echidna.data.samples.SampleJournal"]], "samplenode (class in echidna.data.samples)": [[2, "echidna.data.samples.SampleNode"]], "samplesetjournal (class in echidna.data.samples)": [[2, "echidna.data.samples.SampleSetJournal"]], "samplespec (class in echidna.data.samples)": [[2, "echidna.data.samples.SampleSpec"]], "timestretch (class in echidna.data.transforms)": [[2, "echidna.data.transforms.TimeStretch"]], "timestretchandpitchshift (class in echidna.data.transforms)": [[2, "echidna.data.transforms.TimeStretchAndPitchShift"]], "add_datanode_cls() (in module echidna.data.datanodes)": [[2, "echidna.data.datanodes.add_datanode_cls"]], "add_metric_cls() (in module echidna.data.difficulties)": [[2, "echidna.data.difficulties.add_metric_cls"]], "additional_args() (echidna.data.difficulties.entropydifficulty class method)": [[2, "echidna.data.difficulties.EntropyDifficulty.additional_args"]], "additional_args() (echidna.data.difficulties.frequencydifficulty class method)": [[2, "echidna.data.difficulties.FrequencyDifficulty.additional_args"]], "additional_args() (echidna.data.difficulties.metricspec class method)": [[2, "echidna.data.difficulties.MetricSpec.additional_args"]], "balance_by_remove() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.balance_by_remove"]], "build_dataloader() (in module echidna.data.dataloaders)": [[2, "echidna.data.dataloaders.build_dataloader"]], "build_transform() (in module echidna.data.transforms)": [[2, "echidna.data.transforms.build_transform"]], "category (echidna.data.samples.datasource attribute)": [[2, "echidna.data.samples.Datasource.category"]], "category_map (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.category_map"]], "channel (echidna.data.samples.channeljournal attribute)": [[2, "echidna.data.samples.ChannelJournal.channel"]], "channel_journals (echidna.data.samples.samplejournal attribute)": [[2, "echidna.data.samples.SampleJournal.channel_journals"]], "cleanup_index() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.cleanup_index"]], "collate_fn() (in module echidna.data.dataloaders)": [[2, "echidna.data.dataloaders.collate_fn"]], "created_at (echidna.data.samples.channeljournal attribute)": [[2, "echidna.data.samples.ChannelJournal.created_at"]], "created_at (echidna.data.samples.samplejournal attribute)": [[2, "echidna.data.samples.SampleJournal.created_at"]], "data_dir (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.data_dir"]], "datasources (echidna.data.samples.channeljournal attribute)": [[2, "echidna.data.samples.ChannelJournal.datasources"]], "datasources (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.datasources"]], "duration (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.duration"]], "echidna.data": [[2, "module-echidna.data"]], "echidna.data.augmentations": [[2, "module-echidna.data.augmentations"]], "echidna.data.dataloaders": [[2, "module-echidna.data.dataloaders"]], "echidna.data.datanodes": [[2, "module-echidna.data.datanodes"]], "echidna.data.datasets": [[2, "module-echidna.data.datasets"]], "echidna.data.difficulties": [[2, "module-echidna.data.difficulties"]], "echidna.data.mixtures": [[2, "module-echidna.data.mixtures"]], "echidna.data.samples": [[2, "module-echidna.data.samples"]], "echidna.data.transforms": [[2, "module-echidna.data.transforms"]], "echidna.data.utils": [[2, "module-echidna.data.utils"]], "ensure_index_init() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.ensure_index_init"]], "fold (echidna.data.samples.datasource attribute)": [[2, "echidna.data.samples.Datasource.fold"]], "fold (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.fold"]], "forward() (echidna.data.transforms.compose method)": [[2, "echidna.data.transforms.Compose.forward"]], "forward() (echidna.data.transforms.crop method)": [[2, "echidna.data.transforms.Crop.forward"]], "forward() (echidna.data.transforms.multipointscale method)": [[2, "echidna.data.transforms.MultiPointScale.forward"]], "forward() (echidna.data.transforms.pitchshift method)": [[2, "echidna.data.transforms.PitchShift.forward"]], "forward() (echidna.data.transforms.resample method)": [[2, "echidna.data.transforms.Resample.forward"]], "forward() (echidna.data.transforms.timestretch method)": [[2, "echidna.data.transforms.TimeStretch.forward"]], "forward() (echidna.data.transforms.timestretchandpitchshift method)": [[2, "echidna.data.transforms.TimeStretchAndPitchShift.forward"]], "from_dict() (echidna.data.augmentations.augmentationnodejournal class method)": [[2, "echidna.data.augmentations.AugmentationNodeJournal.from_dict"]], "from_dict() (echidna.data.augmentations.augmentationsetjournal class method)": [[2, "echidna.data.augmentations.AugmentationSetJournal.from_dict"]], "from_dict() (echidna.data.augmentations.augmentationspec class method)": [[2, "echidna.data.augmentations.AugmentationSpec.from_dict"]], "from_dict() (echidna.data.augmentations.channelaugmentation class method)": [[2, "echidna.data.augmentations.ChannelAugmentation.from_dict"]], "from_dict() (echidna.data.augmentations.channelaugmentationjournal class method)": [[2, "echidna.data.augmentations.ChannelAugmentationJournal.from_dict"]], "from_dict() (echidna.data.augmentations.sampleaugmentationjournal class method)": [[2, "echidna.data.augmentations.SampleAugmentationJournal.from_dict"]], "from_dict() (echidna.data.datanodes.datanode class method)": [[2, "echidna.data.datanodes.DataNode.from_dict"]], "from_dict() (echidna.data.datasets.dataset class method)": [[2, "echidna.data.datasets.Dataset.from_dict"]], "from_dict() (echidna.data.difficulties.metricjournal class method)": [[2, "echidna.data.difficulties.MetricJournal.from_dict"]], "from_dict() (echidna.data.difficulties.metricsetjournal class method)": [[2, "echidna.data.difficulties.MetricSetJournal.from_dict"]], "from_dict() (echidna.data.difficulties.metricspec class method)": [[2, "echidna.data.difficulties.MetricSpec.from_dict"]], "from_dict() (echidna.data.mixtures.mixjournal class method)": [[2, "echidna.data.mixtures.MixJournal.from_dict"]], "from_dict() (echidna.data.mixtures.mixsetjournal class method)": [[2, "echidna.data.mixtures.MixSetJournal.from_dict"]], "from_dict() (echidna.data.mixtures.mixsetspec class method)": [[2, "echidna.data.mixtures.MixSetSpec.from_dict"]], "from_dict() (echidna.data.samples.channel class method)": [[2, "echidna.data.samples.Channel.from_dict"]], "from_dict() (echidna.data.samples.channeljournal class method)": [[2, "echidna.data.samples.ChannelJournal.from_dict"]], "from_dict() (echidna.data.samples.datasource class method)": [[2, "echidna.data.samples.Datasource.from_dict"]], "from_dict() (echidna.data.samples.samplejournal class method)": [[2, "echidna.data.samples.SampleJournal.from_dict"]], "from_dict() (echidna.data.samples.samplesetjournal class method)": [[2, "echidna.data.samples.SampleSetJournal.from_dict"]], "from_dict() (echidna.data.samples.samplespec class method)": [[2, "echidna.data.samples.SampleSpec.from_dict"]], "from_dict_args() (echidna.data.augmentations.augmentationnode class method)": [[2, "echidna.data.augmentations.AugmentationNode.from_dict_args"]], "from_dict_args() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.from_dict_args"]], "from_dict_args() (echidna.data.datanodes.emptynode class method)": [[2, "echidna.data.datanodes.EmptyNode.from_dict_args"]], "from_dict_args() (echidna.data.mixtures.mixnode class method)": [[2, "echidna.data.mixtures.MixNode.from_dict_args"]], "from_dict_args() (echidna.data.samples.samplenode class method)": [[2, "echidna.data.samples.SampleNode.from_dict_args"]], "from_list() (echidna.data.samples.channel class method)": [[2, "echidna.data.samples.Channel.from_list"]], "get_datanode_cls() (in module echidna.data.datanodes)": [[2, "echidna.data.datanodes.get_datanode_cls"]], "get_datanode_name() (in module echidna.data.datanodes)": [[2, "echidna.data.datanodes.get_datanode_name"]], "get_metric() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.get_metric"]], "get_metric_cls() (in module echidna.data.difficulties)": [[2, "echidna.data.difficulties.get_metric_cls"]], "get_metric_name() (in module echidna.data.difficulties)": [[2, "echidna.data.difficulties.get_metric_name"]], "get_single_chain() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.get_single_chain"]], "id (echidna.data.samples.datasource attribute)": [[2, "echidna.data.samples.Datasource.id"]], "index_not_initialized() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.index_not_initialized"]], "init_index() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.init_index"]], "jobs (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.jobs"]], "journal_path (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.journal_path"]], "length (echidna.data.samples.channeljournal attribute)": [[2, "echidna.data.samples.ChannelJournal.length"]], "list_leaf_node() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.list_leaf_node"]], "log_level (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.log_level"]], "log_path (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.log_path"]], "merge_activation() (in module echidna.data.utils)": [[2, "echidna.data.utils.merge_activation"]], "metadata_path (echidna.data.samples.samplesetjournal attribute)": [[2, "echidna.data.samples.SampleSetJournal.metadata_path"]], "metadata_path (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.metadata_path"]], "metric_args() (echidna.data.difficulties.entropydifficulty method)": [[2, "echidna.data.difficulties.EntropyDifficulty.metric_args"]], "metric_args() (echidna.data.difficulties.frequencydifficulty method)": [[2, "echidna.data.difficulties.FrequencyDifficulty.metric_args"]], "metric_args() (echidna.data.difficulties.metricspec method)": [[2, "echidna.data.difficulties.MetricSpec.metric_args"]], "offset (echidna.data.samples.channeljournal attribute)": [[2, "echidna.data.samples.ChannelJournal.offset"]], "process() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.process"]], "process_finish (echidna.data.samples.samplesetjournal attribute)": [[2, "echidna.data.samples.SampleSetJournal.process_finish"]], "process_partial() (echidna.data.augmentations.augmentationnode method)": [[2, "echidna.data.augmentations.AugmentationNode.process_partial"]], "process_partial() (echidna.data.augmentations.channelaugmentation method)": [[2, "echidna.data.augmentations.ChannelAugmentation.process_partial"]], "process_partial() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.process_partial"]], "process_partial() (echidna.data.mixtures.mixnode method)": [[2, "echidna.data.mixtures.MixNode.process_partial"]], "process_partial() (echidna.data.samples.samplenode method)": [[2, "echidna.data.samples.SampleNode.process_partial"]], "process_single_chain() (echidna.data.datanodes.datanode class method)": [[2, "echidna.data.datanodes.DataNode.process_single_chain"]], "process_start (echidna.data.samples.samplesetjournal attribute)": [[2, "echidna.data.samples.SampleSetJournal.process_start"]], "push_metric() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.push_metric"]], "put_metrics() (echidna.data.difficulties.metricspec method)": [[2, "echidna.data.difficulties.MetricSpec.put_metrics"]], "put_single_metric() (echidna.data.difficulties.entropydifficulty method)": [[2, "echidna.data.difficulties.EntropyDifficulty.put_single_metric"]], "put_single_metric() (echidna.data.difficulties.frequencydifficulty method)": [[2, "echidna.data.difficulties.FrequencyDifficulty.put_single_metric"]], "put_single_metric() (echidna.data.difficulties.metricspec method)": [[2, "echidna.data.difficulties.MetricSpec.put_single_metric"]], "require_channel_index_partial() (echidna.data.augmentations.augmentationnode method)": [[2, "echidna.data.augmentations.AugmentationNode.require_channel_index_partial"]], "require_channel_index_partial() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.require_channel_index_partial"]], "require_channel_index_partial() (echidna.data.mixtures.mixnode method)": [[2, "echidna.data.mixtures.MixNode.require_channel_index_partial"]], "require_channel_index_partial() (echidna.data.samples.samplenode method)": [[2, "echidna.data.samples.SampleNode.require_channel_index_partial"]], "sample (echidna.data.samples.samplejournal attribute)": [[2, "echidna.data.samples.SampleJournal.sample"]], "sample_journals (echidna.data.samples.samplesetjournal attribute)": [[2, "echidna.data.samples.SampleSetJournal.sample_journals"]], "sample_rate (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.sample_rate"]], "sample_size (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.sample_size"]], "save_augmentation() (echidna.data.augmentations.augmentationspec method)": [[2, "echidna.data.augmentations.AugmentationSpec.save_augmentation"]], "save_mixture() (echidna.data.mixtures.mixsetspec method)": [[2, "echidna.data.mixtures.MixSetSpec.save_mixture"]], "save_samples() (echidna.data.samples.samplespec method)": [[2, "echidna.data.samples.SampleSpec.save_samples"]], "seed (echidna.data.samples.channeljournal attribute)": [[2, "echidna.data.samples.ChannelJournal.seed"]], "seed (echidna.data.samples.samplejournal attribute)": [[2, "echidna.data.samples.SampleJournal.seed"]], "seed (echidna.data.samples.samplesetjournal attribute)": [[2, "echidna.data.samples.SampleSetJournal.seed"]], "seed (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.seed"]], "sheet_path (echidna.data.samples.datasource attribute)": [[2, "echidna.data.samples.Datasource.sheet_path"]], "spec (echidna.data.samples.samplesetjournal attribute)": [[2, "echidna.data.samples.SampleSetJournal.spec"]], "super_type (echidna.data.augmentations.augmentationnode property)": [[2, "echidna.data.augmentations.AugmentationNode.super_type"]], "super_type (echidna.data.datanodes.datanode property)": [[2, "echidna.data.datanodes.DataNode.super_type"]], "super_type (echidna.data.datanodes.emptynode property)": [[2, "echidna.data.datanodes.EmptyNode.super_type"]], "super_type (echidna.data.mixtures.mixnode property)": [[2, "echidna.data.mixtures.MixNode.super_type"]], "super_type (echidna.data.samples.samplenode property)": [[2, "echidna.data.samples.SampleNode.super_type"]], "target_db (echidna.data.samples.samplespec attribute)": [[2, "echidna.data.samples.SampleSpec.target_db"]], "to_dict() (echidna.data.augmentations.augmentationnodejournal method)": [[2, "echidna.data.augmentations.AugmentationNodeJournal.to_dict"]], "to_dict() (echidna.data.augmentations.augmentationsetjournal method)": [[2, "echidna.data.augmentations.AugmentationSetJournal.to_dict"]], "to_dict() (echidna.data.augmentations.augmentationspec method)": [[2, "echidna.data.augmentations.AugmentationSpec.to_dict"]], "to_dict() (echidna.data.augmentations.channelaugmentation method)": [[2, "echidna.data.augmentations.ChannelAugmentation.to_dict"]], "to_dict() (echidna.data.augmentations.channelaugmentationjournal method)": [[2, "echidna.data.augmentations.ChannelAugmentationJournal.to_dict"]], "to_dict() (echidna.data.augmentations.sampleaugmentationjournal method)": [[2, "echidna.data.augmentations.SampleAugmentationJournal.to_dict"]], "to_dict() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.to_dict"]], "to_dict() (echidna.data.datasets.dataset method)": [[2, "echidna.data.datasets.Dataset.to_dict"]], "to_dict() (echidna.data.difficulties.metricjournal method)": [[2, "echidna.data.difficulties.MetricJournal.to_dict"]], "to_dict() (echidna.data.difficulties.metricsetjournal method)": [[2, "echidna.data.difficulties.MetricSetJournal.to_dict"]], "to_dict() (echidna.data.difficulties.metricspec method)": [[2, "echidna.data.difficulties.MetricSpec.to_dict"]], "to_dict() (echidna.data.mixtures.mixjournal method)": [[2, "echidna.data.mixtures.MixJournal.to_dict"]], "to_dict() (echidna.data.mixtures.mixsetjournal method)": [[2, "echidna.data.mixtures.MixSetJournal.to_dict"]], "to_dict() (echidna.data.mixtures.mixsetspec method)": [[2, "echidna.data.mixtures.MixSetSpec.to_dict"]], "to_dict() (echidna.data.samples.channel method)": [[2, "echidna.data.samples.Channel.to_dict"]], "to_dict() (echidna.data.samples.channeljournal method)": [[2, "echidna.data.samples.ChannelJournal.to_dict"]], "to_dict() (echidna.data.samples.datasource method)": [[2, "echidna.data.samples.Datasource.to_dict"]], "to_dict() (echidna.data.samples.samplejournal method)": [[2, "echidna.data.samples.SampleJournal.to_dict"]], "to_dict() (echidna.data.samples.samplesetjournal method)": [[2, "echidna.data.samples.SampleSetJournal.to_dict"]], "to_dict() (echidna.data.samples.samplespec method)": [[2, "echidna.data.samples.SampleSpec.to_dict"]], "to_dict_args() (echidna.data.augmentations.augmentationnode method)": [[2, "echidna.data.augmentations.AugmentationNode.to_dict_args"]], "to_dict_args() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.to_dict_args"]], "to_dict_args() (echidna.data.datanodes.emptynode method)": [[2, "echidna.data.datanodes.EmptyNode.to_dict_args"]], "to_dict_args() (echidna.data.mixtures.mixnode method)": [[2, "echidna.data.mixtures.MixNode.to_dict_args"]], "to_dict_args() (echidna.data.samples.samplenode method)": [[2, "echidna.data.samples.SampleNode.to_dict_args"]], "to_dict_nochildren() (echidna.data.datanodes.datanode method)": [[2, "echidna.data.datanodes.DataNode.to_dict_nochildren"]], "track (echidna.data.samples.datasource attribute)": [[2, "echidna.data.samples.Datasource.track"]], "wave_path (echidna.data.samples.datasource attribute)": [[2, "echidna.data.samples.Datasource.wave_path"]], "compositeloss (class in echidna.metrics.composite)": [[3, "echidna.metrics.composite.CompositeLoss"]], "deepclusteringloss (class in echidna.metrics.deepclustering)": [[3, "echidna.metrics.deepclustering.DeepClusteringLoss"]], "deepldaloss (class in echidna.metrics.deepclustering)": [[3, "echidna.metrics.deepclustering.DeepLDALoss"]], "graphlaplacianloss (class in echidna.metrics.deepclustering)": [[3, "echidna.metrics.deepclustering.GraphLaplacianLoss"]], "l1spectrogramloss (class in echidna.metrics.spectrogram)": [[3, "echidna.metrics.spectrogram.L1SpectrogramLoss"]], "l1waveformloss (class in echidna.metrics.waveform)": [[3, "echidna.metrics.waveform.L1WaveformLoss"]], "l2spectrogramloss (class in echidna.metrics.spectrogram)": [[3, "echidna.metrics.spectrogram.L2SpectrogramLoss"]], "l2waveformloss (class in echidna.metrics.waveform)": [[3, "echidna.metrics.waveform.L2WaveformLoss"]], "loss (class in echidna.metrics.loss)": [[3, "echidna.metrics.loss.Loss"]], "negativesdrloss (class in echidna.metrics.waveform)": [[3, "echidna.metrics.waveform.NegativeSDRLoss"]], "negativesdsdrloss (class in echidna.metrics.waveform)": [[3, "echidna.metrics.waveform.NegativeSDSDRLoss"]], "negativesisdrloss (class in echidna.metrics.waveform)": [[3, "echidna.metrics.waveform.NegativeSISDRLoss"]], "spectrogramconvergenceloss (class in echidna.metrics.spectrogram)": [[3, "echidna.metrics.spectrogram.SpectrogramConvergenceLoss"]], "spectrogramloss (class in echidna.metrics.spectrogram)": [[3, "echidna.metrics.spectrogram.SpectrogramLoss"]], "whitenedkmeansloss (class in echidna.metrics.deepclustering)": [[3, "echidna.metrics.deepclustering.WhitenedKMeansLoss"]], "components (echidna.metrics.composite.compositeloss attribute)": [[3, "echidna.metrics.composite.CompositeLoss.components"]], "deep_clustering_loss() (in module echidna.metrics.deepclustering)": [[3, "echidna.metrics.deepclustering.deep_clustering_loss"]], "domains (echidna.metrics.composite.compositeloss property)": [[3, "echidna.metrics.composite.CompositeLoss.domains"]], "domains (echidna.metrics.loss.loss property)": [[3, "echidna.metrics.loss.Loss.domains"]], "domains (echidna.metrics.spectrogram.spectrogramloss property)": [[3, "echidna.metrics.spectrogram.SpectrogramLoss.domains"]], "echidna.metrics": [[3, "module-echidna.metrics"]], "echidna.metrics.composite": [[3, "module-echidna.metrics.composite"]], "echidna.metrics.deepclustering": [[3, "module-echidna.metrics.deepclustering"]], "echidna.metrics.loss": [[3, "module-echidna.metrics.loss"]], "echidna.metrics.spectrogram": [[3, "module-echidna.metrics.spectrogram"]], "echidna.metrics.waveform": [[3, "module-echidna.metrics.waveform"]], "forward() (echidna.metrics.composite.compositeloss method)": [[3, "echidna.metrics.composite.CompositeLoss.forward"]], "forward() (echidna.metrics.loss.loss method)": [[3, "echidna.metrics.loss.Loss.forward"]], "forward_no_reduction() (echidna.metrics.composite.compositeloss method)": [[3, "echidna.metrics.composite.CompositeLoss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.loss.loss method)": [[3, "echidna.metrics.loss.Loss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.spectrogram.l1spectrogramloss method)": [[3, "echidna.metrics.spectrogram.L1SpectrogramLoss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.spectrogram.l2spectrogramloss method)": [[3, "echidna.metrics.spectrogram.L2SpectrogramLoss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.spectrogram.spectrogramconvergenceloss method)": [[3, "echidna.metrics.spectrogram.SpectrogramConvergenceLoss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.spectrogram.spectrogramloss method)": [[3, "echidna.metrics.spectrogram.SpectrogramLoss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.waveform.l1waveformloss method)": [[3, "echidna.metrics.waveform.L1WaveformLoss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.waveform.l2waveformloss method)": [[3, "echidna.metrics.waveform.L2WaveformLoss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.waveform.negativesdrloss method)": [[3, "echidna.metrics.waveform.NegativeSDRLoss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.waveform.negativesdsdrloss method)": [[3, "echidna.metrics.waveform.NegativeSDSDRLoss.forward_no_reduction"]], "forward_no_reduction() (echidna.metrics.waveform.negativesisdrloss method)": [[3, "echidna.metrics.waveform.NegativeSISDRLoss.forward_no_reduction"]], "from_dict() (echidna.metrics.loss.loss class method)": [[3, "echidna.metrics.loss.Loss.from_dict"]], "from_dict_args() (echidna.metrics.composite.compositeloss class method)": [[3, "echidna.metrics.composite.CompositeLoss.from_dict_args"]], "from_dict_args() (echidna.metrics.loss.loss class method)": [[3, "echidna.metrics.loss.Loss.from_dict_args"]], "from_dict_args() (echidna.metrics.spectrogram.spectrogramloss class method)": [[3, "echidna.metrics.spectrogram.SpectrogramLoss.from_dict_args"]], "get_loss_class() (in module echidna.metrics.loss)": [[3, "echidna.metrics.loss.get_loss_class"]], "get_loss_name() (in module echidna.metrics.loss)": [[3, "echidna.metrics.loss.get_loss_name"]], "multiscale_spectrogram_loss() (in module echidna.metrics.spectrogram)": [[3, "echidna.metrics.spectrogram.multiscale_spectrogram_loss"]], "register_loss_class() (in module echidna.metrics.loss)": [[3, "echidna.metrics.loss.register_loss_class"]], "source_to_distortion_ratio() (in module echidna.metrics.waveform)": [[3, "echidna.metrics.waveform.source_to_distortion_ratio"]], "to_dict() (echidna.metrics.loss.loss method)": [[3, "echidna.metrics.loss.Loss.to_dict"]], "to_dict_args() (echidna.metrics.composite.compositeloss method)": [[3, "echidna.metrics.composite.CompositeLoss.to_dict_args"]], "to_dict_args() (echidna.metrics.loss.loss method)": [[3, "echidna.metrics.loss.Loss.to_dict_args"]], "to_dict_args() (echidna.metrics.spectrogram.spectrogramloss method)": [[3, "echidna.metrics.spectrogram.SpectrogramLoss.to_dict_args"]], "baselinechimeranet() (in module echidna.models.nest)": [[4, "echidna.models.nest.BaselineChimeraNet"]], "baselineencdecmodel() (in module echidna.models.nest)": [[4, "echidna.models.nest.BaselineEncDecModel"]], "checkpoint (class in echidna.models.checkpoints)": [[4, "echidna.models.checkpoints.Checkpoint"]], "checkpointmodel (class in echidna.models.models)": [[4, "echidna.models.models.CheckpointModel"]], "convtasnetchimeranet() (in module echidna.models.nest)": [[4, "echidna.models.nest.ConvTasNetChimeraNet"]], "convtasnetencdecmodel() (in module echidna.models.nest)": [[4, "echidna.models.nest.ConvTasNetEncDecModel"]], "demucschimeranet() (in module echidna.models.nest)": [[4, "echidna.models.nest.DemucsChimeraNet"]], "demucsencdecmodel() (in module echidna.models.nest)": [[4, "echidna.models.nest.DemucsEncDecModel"]], "initialcheckpoint (class in echidna.models.checkpoints)": [[4, "echidna.models.checkpoints.InitialCheckpoint"]], "initialmodel (class in echidna.models.models)": [[4, "echidna.models.models.InitialModel"]], "model (class in echidna.models.models)": [[4, "echidna.models.models.Model"]], "savedcheckpoint (class in echidna.models.checkpoints)": [[4, "echidna.models.checkpoints.SavedCheckpoint"]], "savedmodel (class in echidna.models.models)": [[4, "echidna.models.models.SavedModel"]], "waveunetchimeranet() (in module echidna.models.nest)": [[4, "echidna.models.nest.WaveUNetChimeraNet"]], "waveunetencdecmodel() (in module echidna.models.nest)": [[4, "echidna.models.nest.WaveUNetEncDecModel"]], "echidna.models": [[4, "module-echidna.models"]], "echidna.models.checkpoints": [[4, "module-echidna.models.checkpoints"]], "echidna.models.models": [[4, "module-echidna.models.models"]], "echidna.models.nest": [[4, "module-echidna.models.nest"]], "echidna.models.utils": [[4, "module-echidna.models.utils"]], "from_dict() (echidna.models.checkpoints.checkpoint class method)": [[4, "echidna.models.checkpoints.Checkpoint.from_dict"]], "from_dict() (echidna.models.models.model class method)": [[4, "echidna.models.models.Model.from_dict"]], "from_dict_args() (echidna.models.checkpoints.initialcheckpoint class method)": [[4, "echidna.models.checkpoints.InitialCheckpoint.from_dict_args"]], "from_dict_args() (echidna.models.checkpoints.savedcheckpoint class method)": [[4, "echidna.models.checkpoints.SavedCheckpoint.from_dict_args"]], "from_dict_args() (echidna.models.models.checkpointmodel class method)": [[4, "echidna.models.models.CheckpointModel.from_dict_args"]], "from_dict_args() (echidna.models.models.initialmodel class method)": [[4, "echidna.models.models.InitialModel.from_dict_args"]], "from_dict_args() (echidna.models.models.savedmodel class method)": [[4, "echidna.models.models.SavedModel.from_dict_args"]], "generate_dft_matrix() (in module echidna.models.utils)": [[4, "echidna.models.utils.generate_dft_matrix"]], "get_class() (echidna.models.models.checkpointmodel method)": [[4, "echidna.models.models.CheckpointModel.get_class"]], "get_class() (echidna.models.models.initialmodel method)": [[4, "echidna.models.models.InitialModel.get_class"]], "get_class() (echidna.models.models.model method)": [[4, "echidna.models.models.Model.get_class"]], "get_class() (echidna.models.models.savedmodel method)": [[4, "echidna.models.models.SavedModel.get_class"]], "get_epoch() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_epoch"]], "get_epoch() (echidna.models.models.checkpointmodel method)": [[4, "echidna.models.models.CheckpointModel.get_epoch"]], "get_epoch() (echidna.models.models.model method)": [[4, "echidna.models.models.Model.get_epoch"]], "get_epoch() (echidna.models.models.savedmodel method)": [[4, "echidna.models.models.SavedModel.get_epoch"]], "get_hyperparameters() (echidna.models.models.checkpointmodel method)": [[4, "echidna.models.models.CheckpointModel.get_hyperparameters"]], "get_hyperparameters() (echidna.models.models.initialmodel method)": [[4, "echidna.models.models.InitialModel.get_hyperparameters"]], "get_hyperparameters() (echidna.models.models.model method)": [[4, "echidna.models.models.Model.get_hyperparameters"]], "get_hyperparameters() (echidna.models.models.savedmodel method)": [[4, "echidna.models.models.SavedModel.get_hyperparameters"]], "get_model() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_model"]], "get_model() (echidna.models.checkpoints.initialcheckpoint method)": [[4, "echidna.models.checkpoints.InitialCheckpoint.get_model"]], "get_model() (echidna.models.checkpoints.savedcheckpoint method)": [[4, "echidna.models.checkpoints.SavedCheckpoint.get_model"]], "get_model_class() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_model_class"]], "get_model_class() (in module echidna.models.models)": [[4, "echidna.models.models.get_model_class"]], "get_model_hyperparameters() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_model_hyperparameters"]], "get_optimizer_class() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_optimizer_class"]], "get_optimizer_class() (echidna.models.checkpoints.initialcheckpoint method)": [[4, "echidna.models.checkpoints.InitialCheckpoint.get_optimizer_class"]], "get_optimizer_class() (echidna.models.checkpoints.savedcheckpoint method)": [[4, "echidna.models.checkpoints.SavedCheckpoint.get_optimizer_class"]], "get_optimizer_class() (in module echidna.models.checkpoints)": [[4, "echidna.models.checkpoints.get_optimizer_class"]], "get_optimizer_hyperparameters() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_optimizer_hyperparameters"]], "get_optimizer_hyperparameters() (echidna.models.checkpoints.initialcheckpoint method)": [[4, "echidna.models.checkpoints.InitialCheckpoint.get_optimizer_hyperparameters"]], "get_optimizer_hyperparameters() (echidna.models.checkpoints.savedcheckpoint method)": [[4, "echidna.models.checkpoints.SavedCheckpoint.get_optimizer_hyperparameters"]], "get_scheduler_class() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_scheduler_class"]], "get_scheduler_class() (echidna.models.checkpoints.initialcheckpoint method)": [[4, "echidna.models.checkpoints.InitialCheckpoint.get_scheduler_class"]], "get_scheduler_class() (echidna.models.checkpoints.savedcheckpoint method)": [[4, "echidna.models.checkpoints.SavedCheckpoint.get_scheduler_class"]], "get_scheduler_class() (in module echidna.models.checkpoints)": [[4, "echidna.models.checkpoints.get_scheduler_class"]], "get_scheduler_hyperparameters() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_scheduler_hyperparameters"]], "get_scheduler_hyperparameters() (echidna.models.checkpoints.initialcheckpoint method)": [[4, "echidna.models.checkpoints.InitialCheckpoint.get_scheduler_hyperparameters"]], "get_scheduler_hyperparameters() (echidna.models.checkpoints.savedcheckpoint method)": [[4, "echidna.models.checkpoints.SavedCheckpoint.get_scheduler_hyperparameters"]], "get_torch_model() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_torch_model"]], "get_torch_model() (echidna.models.models.checkpointmodel method)": [[4, "echidna.models.models.CheckpointModel.get_torch_model"]], "get_torch_model() (echidna.models.models.initialmodel method)": [[4, "echidna.models.models.InitialModel.get_torch_model"]], "get_torch_model() (echidna.models.models.model method)": [[4, "echidna.models.models.Model.get_torch_model"]], "get_torch_model() (echidna.models.models.savedmodel method)": [[4, "echidna.models.models.SavedModel.get_torch_model"]], "get_torch_optimizer() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_torch_optimizer"]], "get_torch_optimizer() (echidna.models.checkpoints.initialcheckpoint method)": [[4, "echidna.models.checkpoints.InitialCheckpoint.get_torch_optimizer"]], "get_torch_optimizer() (echidna.models.checkpoints.savedcheckpoint method)": [[4, "echidna.models.checkpoints.SavedCheckpoint.get_torch_optimizer"]], "get_torch_scheduler() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.get_torch_scheduler"]], "get_torch_scheduler() (echidna.models.checkpoints.initialcheckpoint method)": [[4, "echidna.models.checkpoints.InitialCheckpoint.get_torch_scheduler"]], "get_torch_scheduler() (echidna.models.checkpoints.savedcheckpoint method)": [[4, "echidna.models.checkpoints.SavedCheckpoint.get_torch_scheduler"]], "init_conv_weight() (in module echidna.models.utils)": [[4, "echidna.models.utils.init_conv_weight"]], "init_lstm_weight() (in module echidna.models.utils)": [[4, "echidna.models.utils.init_lstm_weight"]], "init_module() (in module echidna.models.utils)": [[4, "echidna.models.utils.init_module"]], "match_length() (in module echidna.models.utils)": [[4, "echidna.models.utils.match_length"]], "register_model_class() (in module echidna.models.models)": [[4, "echidna.models.models.register_model_class"]], "save_torch_checkpoint() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.save_torch_checkpoint"]], "save_torch_model() (echidna.models.models.model method)": [[4, "echidna.models.models.Model.save_torch_model"]], "to_dict() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.to_dict"]], "to_dict() (echidna.models.models.model method)": [[4, "echidna.models.models.Model.to_dict"]], "to_dict_args() (echidna.models.checkpoints.checkpoint method)": [[4, "echidna.models.checkpoints.Checkpoint.to_dict_args"]], "to_dict_args() (echidna.models.checkpoints.initialcheckpoint method)": [[4, "echidna.models.checkpoints.InitialCheckpoint.to_dict_args"]], "to_dict_args() (echidna.models.checkpoints.savedcheckpoint method)": [[4, "echidna.models.checkpoints.SavedCheckpoint.to_dict_args"]], "to_dict_args() (echidna.models.models.checkpointmodel method)": [[4, "echidna.models.models.CheckpointModel.to_dict_args"]], "to_dict_args() (echidna.models.models.initialmodel method)": [[4, "echidna.models.models.InitialModel.to_dict_args"]], "to_dict_args() (echidna.models.models.model method)": [[4, "echidna.models.models.Model.to_dict_args"]], "to_dict_args() (echidna.models.models.savedmodel method)": [[4, "echidna.models.models.SavedModel.to_dict_args"]], "baselinedecoder (class in echidna.models.core.baseline)": [[5, "echidna.models.core.baseline.BaselineDecoder"]], "baselineencoder (class in echidna.models.core.baseline)": [[5, "echidna.models.core.baseline.BaselineEncoder"]], "bottleneckblock (class in echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.BottleneckBlock"]], "codebookmask (class in echidna.models.core.commonlayers)": [[5, "echidna.models.core.commonlayers.CodebookMask"]], "compressedresidualblock (class in echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.CompressedResidualBlock"]], "convblock (class in echidna.models.core.convtasnet)": [[5, "echidna.models.core.convtasnet.ConvBlock"]], "convtasnetdecoder (class in echidna.models.core.convtasnet)": [[5, "echidna.models.core.convtasnet.ConvTasNetDecoder"]], "convtasnetencoder (class in echidna.models.core.convtasnet)": [[5, "echidna.models.core.convtasnet.ConvTasNetEncoder"]], "demucsdecoder (class in echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.DemucsDecoder"]], "demucsencoder (class in echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.DemucsEncoder"]], "downsamplingblock (class in echidna.models.core.waveunet)": [[5, "echidna.models.core.waveunet.DownsamplingBlock"]], "istftlayer (class in echidna.models.core.commonlayers)": [[5, "echidna.models.core.commonlayers.ISTFTLayer"]], "interpolation (class in echidna.models.core.waveunet)": [[5, "echidna.models.core.waveunet.Interpolation"]], "localattention (class in echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.LocalAttention"]], "restrictedbilstm (class in echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.RestrictedBiLSTM"]], "stftlayer (class in echidna.models.core.commonlayers)": [[5, "echidna.models.core.commonlayers.STFTLayer"]], "sigmoidmask (class in echidna.models.core.commonlayers)": [[5, "echidna.models.core.commonlayers.SigmoidMask"]], "tdecoderblock() (in module echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.TDecoderBlock"]], "tencoderblock() (in module echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.TEncoderBlock"]], "trainableistftlayer (class in echidna.models.core.commonlayers)": [[5, "echidna.models.core.commonlayers.TrainableISTFTLayer"]], "trainablestftlayer (class in echidna.models.core.commonlayers)": [[5, "echidna.models.core.commonlayers.TrainableSTFTLayer"]], "upsamplingblock (class in echidna.models.core.waveunet)": [[5, "echidna.models.core.waveunet.UpsamplingBlock"]], "waveunetdecoder (class in echidna.models.core.waveunet)": [[5, "echidna.models.core.waveunet.WaveUNetDecoder"]], "waveunetencoder (class in echidna.models.core.waveunet)": [[5, "echidna.models.core.waveunet.WaveUNetEncoder"]], "zdecoderblock() (in module echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.ZDecoderBlock"]], "zencoderblock() (in module echidna.models.core.demucs)": [[5, "echidna.models.core.demucs.ZEncoderBlock"]], "echidna.models.core": [[5, "module-echidna.models.core"]], "echidna.models.core.baseline": [[5, "module-echidna.models.core.baseline"]], "echidna.models.core.commonlayers": [[5, "module-echidna.models.core.commonlayers"]], "echidna.models.core.convtasnet": [[5, "module-echidna.models.core.convtasnet"]], "echidna.models.core.demucs": [[5, "module-echidna.models.core.demucs"]], "echidna.models.core.waveunet": [[5, "module-echidna.models.core.waveunet"]], "forward() (echidna.models.core.baseline.baselinedecoder method)": [[5, "echidna.models.core.baseline.BaselineDecoder.forward"]], "forward() (echidna.models.core.baseline.baselineencoder method)": [[5, "echidna.models.core.baseline.BaselineEncoder.forward"]], "forward() (echidna.models.core.commonlayers.codebookmask method)": [[5, "echidna.models.core.commonlayers.CodebookMask.forward"]], "forward() (echidna.models.core.commonlayers.istftlayer method)": [[5, "echidna.models.core.commonlayers.ISTFTLayer.forward"]], "forward() (echidna.models.core.commonlayers.stftlayer method)": [[5, "echidna.models.core.commonlayers.STFTLayer.forward"]], "forward() (echidna.models.core.commonlayers.sigmoidmask method)": [[5, "echidna.models.core.commonlayers.SigmoidMask.forward"]], "forward() (echidna.models.core.commonlayers.trainableistftlayer method)": [[5, "echidna.models.core.commonlayers.TrainableISTFTLayer.forward"]], "forward() (echidna.models.core.commonlayers.trainablestftlayer method)": [[5, "echidna.models.core.commonlayers.TrainableSTFTLayer.forward"]], "forward() (echidna.models.core.convtasnet.convblock method)": [[5, "echidna.models.core.convtasnet.ConvBlock.forward"]], "forward() (echidna.models.core.convtasnet.convtasnetdecoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetDecoder.forward"]], "forward() (echidna.models.core.convtasnet.convtasnetencoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetEncoder.forward"]], "forward() (echidna.models.core.demucs.bottleneckblock method)": [[5, "echidna.models.core.demucs.BottleneckBlock.forward"]], "forward() (echidna.models.core.demucs.compressedresidualblock method)": [[5, "echidna.models.core.demucs.CompressedResidualBlock.forward"]], "forward() (echidna.models.core.demucs.demucsdecoder method)": [[5, "echidna.models.core.demucs.DemucsDecoder.forward"]], "forward() (echidna.models.core.demucs.demucsencoder method)": [[5, "echidna.models.core.demucs.DemucsEncoder.forward"]], "forward() (echidna.models.core.demucs.localattention method)": [[5, "echidna.models.core.demucs.LocalAttention.forward"]], "forward() (echidna.models.core.demucs.restrictedbilstm method)": [[5, "echidna.models.core.demucs.RestrictedBiLSTM.forward"]], "forward() (echidna.models.core.waveunet.downsamplingblock method)": [[5, "echidna.models.core.waveunet.DownsamplingBlock.forward"]], "forward() (echidna.models.core.waveunet.interpolation method)": [[5, "echidna.models.core.waveunet.Interpolation.forward"]], "forward() (echidna.models.core.waveunet.upsamplingblock method)": [[5, "echidna.models.core.waveunet.UpsamplingBlock.forward"]], "forward() (echidna.models.core.waveunet.waveunetdecoder method)": [[5, "echidna.models.core.waveunet.WaveUNetDecoder.forward"]], "forward() (echidna.models.core.waveunet.waveunetencoder method)": [[5, "echidna.models.core.waveunet.WaveUNetEncoder.forward"]], "forward_channel() (echidna.models.core.convtasnet.convtasnetencoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetEncoder.forward_channel"]], "forward_feature_size() (echidna.models.core.baseline.baselinedecoder method)": [[5, "echidna.models.core.baseline.BaselineDecoder.forward_feature_size"]], "forward_feature_size() (echidna.models.core.baseline.baselineencoder method)": [[5, "echidna.models.core.baseline.BaselineEncoder.forward_feature_size"]], "forward_feature_size() (echidna.models.core.convtasnet.convtasnetdecoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetDecoder.forward_feature_size"]], "forward_feature_size() (echidna.models.core.demucs.demucsdecoder method)": [[5, "echidna.models.core.demucs.DemucsDecoder.forward_feature_size"]], "forward_feature_size() (echidna.models.core.demucs.demucsencoder method)": [[5, "echidna.models.core.demucs.DemucsEncoder.forward_feature_size"]], "forward_feature_size() (echidna.models.core.waveunet.waveunetdecoder method)": [[5, "echidna.models.core.waveunet.WaveUNetDecoder.forward_feature_size"]], "forward_feature_size() (echidna.models.core.waveunet.waveunetencoder method)": [[5, "echidna.models.core.waveunet.WaveUNetEncoder.forward_feature_size"]], "forward_length() (echidna.models.core.baseline.baselinedecoder method)": [[5, "echidna.models.core.baseline.BaselineDecoder.forward_length"]], "forward_length() (echidna.models.core.baseline.baselineencoder method)": [[5, "echidna.models.core.baseline.BaselineEncoder.forward_length"]], "forward_length() (echidna.models.core.commonlayers.istftlayer method)": [[5, "echidna.models.core.commonlayers.ISTFTLayer.forward_length"]], "forward_length() (echidna.models.core.commonlayers.stftlayer method)": [[5, "echidna.models.core.commonlayers.STFTLayer.forward_length"]], "forward_length() (echidna.models.core.commonlayers.trainableistftlayer method)": [[5, "echidna.models.core.commonlayers.TrainableISTFTLayer.forward_length"]], "forward_length() (echidna.models.core.commonlayers.trainablestftlayer method)": [[5, "echidna.models.core.commonlayers.TrainableSTFTLayer.forward_length"]], "forward_length() (echidna.models.core.convtasnet.convblock method)": [[5, "echidna.models.core.convtasnet.ConvBlock.forward_length"]], "forward_length() (echidna.models.core.convtasnet.convtasnetdecoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetDecoder.forward_length"]], "forward_length() (echidna.models.core.convtasnet.convtasnetencoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetEncoder.forward_length"]], "forward_length() (echidna.models.core.demucs.bottleneckblock method)": [[5, "echidna.models.core.demucs.BottleneckBlock.forward_length"]], "forward_length() (echidna.models.core.demucs.demucsdecoder method)": [[5, "echidna.models.core.demucs.DemucsDecoder.forward_length"]], "forward_length() (echidna.models.core.demucs.demucsencoder method)": [[5, "echidna.models.core.demucs.DemucsEncoder.forward_length"]], "forward_length() (echidna.models.core.waveunet.downsamplingblock method)": [[5, "echidna.models.core.waveunet.DownsamplingBlock.forward_length"]], "forward_length() (echidna.models.core.waveunet.interpolation method)": [[5, "echidna.models.core.waveunet.Interpolation.forward_length"]], "forward_length() (echidna.models.core.waveunet.upsamplingblock method)": [[5, "echidna.models.core.waveunet.UpsamplingBlock.forward_length"]], "forward_length() (echidna.models.core.waveunet.waveunetdecoder method)": [[5, "echidna.models.core.waveunet.WaveUNetDecoder.forward_length"]], "forward_length() (echidna.models.core.waveunet.waveunetencoder method)": [[5, "echidna.models.core.waveunet.WaveUNetEncoder.forward_length"]], "parameter_list() (echidna.models.core.baseline.baselinedecoder method)": [[5, "echidna.models.core.baseline.BaselineDecoder.parameter_list"]], "parameter_list() (echidna.models.core.baseline.baselineencoder method)": [[5, "echidna.models.core.baseline.BaselineEncoder.parameter_list"]], "parameter_list() (echidna.models.core.convtasnet.convtasnetdecoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetDecoder.parameter_list"]], "parameter_list() (echidna.models.core.convtasnet.convtasnetencoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetEncoder.parameter_list"]], "parameter_list() (echidna.models.core.demucs.demucsdecoder method)": [[5, "echidna.models.core.demucs.DemucsDecoder.parameter_list"]], "parameter_list() (echidna.models.core.demucs.demucsencoder method)": [[5, "echidna.models.core.demucs.DemucsEncoder.parameter_list"]], "parameter_list() (echidna.models.core.waveunet.waveunetdecoder method)": [[5, "echidna.models.core.waveunet.WaveUNetDecoder.parameter_list"]], "parameter_list() (echidna.models.core.waveunet.waveunetencoder method)": [[5, "echidna.models.core.waveunet.WaveUNetEncoder.parameter_list"]], "reverse_length() (echidna.models.core.baseline.baselinedecoder method)": [[5, "echidna.models.core.baseline.BaselineDecoder.reverse_length"]], "reverse_length() (echidna.models.core.baseline.baselineencoder method)": [[5, "echidna.models.core.baseline.BaselineEncoder.reverse_length"]], "reverse_length() (echidna.models.core.commonlayers.istftlayer method)": [[5, "echidna.models.core.commonlayers.ISTFTLayer.reverse_length"]], "reverse_length() (echidna.models.core.commonlayers.stftlayer method)": [[5, "echidna.models.core.commonlayers.STFTLayer.reverse_length"]], "reverse_length() (echidna.models.core.commonlayers.trainableistftlayer method)": [[5, "echidna.models.core.commonlayers.TrainableISTFTLayer.reverse_length"]], "reverse_length() (echidna.models.core.commonlayers.trainablestftlayer method)": [[5, "echidna.models.core.commonlayers.TrainableSTFTLayer.reverse_length"]], "reverse_length() (echidna.models.core.convtasnet.convblock method)": [[5, "echidna.models.core.convtasnet.ConvBlock.reverse_length"]], "reverse_length() (echidna.models.core.convtasnet.convtasnetdecoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetDecoder.reverse_length"]], "reverse_length() (echidna.models.core.convtasnet.convtasnetencoder method)": [[5, "echidna.models.core.convtasnet.ConvTasNetEncoder.reverse_length"]], "reverse_length() (echidna.models.core.demucs.bottleneckblock method)": [[5, "echidna.models.core.demucs.BottleneckBlock.reverse_length"]], "reverse_length() (echidna.models.core.demucs.demucsdecoder method)": [[5, "echidna.models.core.demucs.DemucsDecoder.reverse_length"]], "reverse_length() (echidna.models.core.demucs.demucsencoder method)": [[5, "echidna.models.core.demucs.DemucsEncoder.reverse_length"]], "reverse_length() (echidna.models.core.waveunet.downsamplingblock method)": [[5, "echidna.models.core.waveunet.DownsamplingBlock.reverse_length"]], "reverse_length() (echidna.models.core.waveunet.interpolation method)": [[5, "echidna.models.core.waveunet.Interpolation.reverse_length"]], "reverse_length() (echidna.models.core.waveunet.upsamplingblock method)": [[5, "echidna.models.core.waveunet.UpsamplingBlock.reverse_length"]], "reverse_length() (echidna.models.core.waveunet.waveunetdecoder method)": [[5, "echidna.models.core.waveunet.WaveUNetDecoder.reverse_length"]], "reverse_length() (echidna.models.core.waveunet.waveunetencoder method)": [[5, "echidna.models.core.waveunet.WaveUNetEncoder.reverse_length"]], "chimeranet (class in echidna.models.multidomain.chimera)": [[6, "echidna.models.multidomain.chimera.ChimeraNet"]], "embeddinghead (class in echidna.models.multidomain.chimera)": [[6, "echidna.models.multidomain.chimera.EmbeddingHead"]], "encdecmodel (class in echidna.models.multidomain.encdec)": [[6, "echidna.models.multidomain.encdec.EncDecModel"]], "echidna.models.multidomain": [[6, "module-echidna.models.multidomain"]], "echidna.models.multidomain.cerberus": [[6, "module-echidna.models.multidomain.cerberus"]], "echidna.models.multidomain.chimera": [[6, "module-echidna.models.multidomain.chimera"]], "echidna.models.multidomain.encdec": [[6, "module-echidna.models.multidomain.encdec"]], "forward() (echidna.models.multidomain.chimera.chimeranet method)": [[6, "echidna.models.multidomain.chimera.ChimeraNet.forward"]], "forward() (echidna.models.multidomain.chimera.embeddinghead method)": [[6, "echidna.models.multidomain.chimera.EmbeddingHead.forward"]], "forward() (echidna.models.multidomain.encdec.encdecmodel method)": [[6, "echidna.models.multidomain.encdec.EncDecModel.forward"]], "forward_embd_dim() (echidna.models.multidomain.chimera.chimeranet method)": [[6, "echidna.models.multidomain.chimera.ChimeraNet.forward_embd_dim"]], "forward_embd_dim() (echidna.models.multidomain.encdec.encdecmodel method)": [[6, "echidna.models.multidomain.encdec.EncDecModel.forward_embd_dim"]], "forward_embd_feature() (echidna.models.multidomain.chimera.chimeranet method)": [[6, "echidna.models.multidomain.chimera.ChimeraNet.forward_embd_feature"]], "forward_embd_feature() (echidna.models.multidomain.encdec.encdecmodel method)": [[6, "echidna.models.multidomain.encdec.EncDecModel.forward_embd_feature"]], "forward_embd_length() (echidna.models.multidomain.chimera.chimeranet method)": [[6, "echidna.models.multidomain.chimera.ChimeraNet.forward_embd_length"]], "forward_embd_length() (echidna.models.multidomain.encdec.encdecmodel method)": [[6, "echidna.models.multidomain.encdec.EncDecModel.forward_embd_length"]], "forward_feature_dim() (echidna.models.multidomain.chimera.embeddinghead method)": [[6, "echidna.models.multidomain.chimera.EmbeddingHead.forward_feature_dim"]], "forward_feature_size() (echidna.models.multidomain.chimera.embeddinghead method)": [[6, "echidna.models.multidomain.chimera.EmbeddingHead.forward_feature_size"]], "forward_wave_channel() (echidna.models.multidomain.chimera.chimeranet method)": [[6, "echidna.models.multidomain.chimera.ChimeraNet.forward_wave_channel"]], "forward_wave_channel() (echidna.models.multidomain.encdec.encdecmodel method)": [[6, "echidna.models.multidomain.encdec.EncDecModel.forward_wave_channel"]], "forward_wave_length() (echidna.models.multidomain.chimera.chimeranet method)": [[6, "echidna.models.multidomain.chimera.ChimeraNet.forward_wave_length"]], "forward_wave_length() (echidna.models.multidomain.encdec.encdecmodel method)": [[6, "echidna.models.multidomain.encdec.EncDecModel.forward_wave_length"]], "parameter_list() (echidna.models.multidomain.chimera.chimeranet method)": [[6, "echidna.models.multidomain.chimera.ChimeraNet.parameter_list"]], "parameter_list() (echidna.models.multidomain.encdec.encdecmodel method)": [[6, "echidna.models.multidomain.encdec.EncDecModel.parameter_list"]], "reverse_wave_length() (echidna.models.multidomain.chimera.chimeranet method)": [[6, "echidna.models.multidomain.chimera.ChimeraNet.reverse_wave_length"]], "reverse_wave_length() (echidna.models.multidomain.encdec.encdecmodel method)": [[6, "echidna.models.multidomain.encdec.EncDecModel.reverse_wave_length"]], "clusteringjournal (class in echidna.procs.clusterings)": [[7, "echidna.procs.clusterings.ClusteringJournal"]], "clusteringspec (class in echidna.procs.clusterings)": [[7, "echidna.procs.clusterings.ClusteringSpec"]], "epochjournal (class in echidna.procs.trainings)": [[7, "echidna.procs.trainings.EpochJournal"]], "separationjournal (class in echidna.procs.separations)": [[7, "echidna.procs.separations.SeparationJournal"]], "separationspec (class in echidna.procs.separations)": [[7, "echidna.procs.separations.SeparationSpec"]], "stepjournal (class in echidna.procs.utils)": [[7, "echidna.procs.utils.StepJournal"]], "trainingspec (class in echidna.procs.trainings)": [[7, "echidna.procs.trainings.TrainingSpec"]], "transcriptionjournal (class in echidna.procs.transcriptions)": [[7, "echidna.procs.transcriptions.TranscriptionJournal"]], "transcriptionspec (class in echidna.procs.transcriptions)": [[7, "echidna.procs.transcriptions.TranscriptionSpec"]], "validationjournal (class in echidna.procs.validations)": [[7, "echidna.procs.validations.ValidationJournal"]], "validationspec (class in echidna.procs.validations)": [[7, "echidna.procs.validations.ValidationSpec"]], "cluster() (echidna.procs.clusterings.clusteringspec method)": [[7, "echidna.procs.clusterings.ClusteringSpec.cluster"]], "echidna.procs": [[7, "module-echidna.procs"]], "echidna.procs.clusterings": [[7, "module-echidna.procs.clusterings"]], "echidna.procs.separations": [[7, "module-echidna.procs.separations"]], "echidna.procs.trainings": [[7, "module-echidna.procs.trainings"]], "echidna.procs.transcriptions": [[7, "module-echidna.procs.transcriptions"]], "echidna.procs.utils": [[7, "module-echidna.procs.utils"]], "echidna.procs.validations": [[7, "module-echidna.procs.validations"]], "from_dict() (echidna.procs.clusterings.clusteringjournal class method)": [[7, "echidna.procs.clusterings.ClusteringJournal.from_dict"]], "from_dict() (echidna.procs.clusterings.clusteringspec class method)": [[7, "echidna.procs.clusterings.ClusteringSpec.from_dict"]], "from_dict() (echidna.procs.separations.separationjournal class method)": [[7, "echidna.procs.separations.SeparationJournal.from_dict"]], "from_dict() (echidna.procs.separations.separationspec class method)": [[7, "echidna.procs.separations.SeparationSpec.from_dict"]], "from_dict() (echidna.procs.trainings.epochjournal class method)": [[7, "echidna.procs.trainings.EpochJournal.from_dict"]], "from_dict() (echidna.procs.trainings.trainingspec class method)": [[7, "echidna.procs.trainings.TrainingSpec.from_dict"]], "from_dict() (echidna.procs.utils.stepjournal class method)": [[7, "echidna.procs.utils.StepJournal.from_dict"]], "from_dict() (echidna.procs.validations.validationjournal class method)": [[7, "echidna.procs.validations.ValidationJournal.from_dict"]], "from_dict() (echidna.procs.validations.validationspec class method)": [[7, "echidna.procs.validations.ValidationSpec.from_dict"]], "mask_from_embedding() (in module echidna.procs.clusterings)": [[7, "echidna.procs.clusterings.mask_from_embedding"]], "merge_windows() (in module echidna.procs.clusterings)": [[7, "echidna.procs.clusterings.merge_windows"]], "merge_windows() (in module echidna.procs.separations)": [[7, "echidna.procs.separations.merge_windows"]], "process_batch() (in module echidna.procs.utils)": [[7, "echidna.procs.utils.process_batch"]], "separate() (echidna.procs.separations.separationspec method)": [[7, "echidna.procs.separations.SeparationSpec.separate"]], "split_into_windows() (in module echidna.procs.clusterings)": [[7, "echidna.procs.clusterings.split_into_windows"]], "split_into_windows() (in module echidna.procs.separations)": [[7, "echidna.procs.separations.split_into_windows"]], "to_dict() (echidna.procs.clusterings.clusteringjournal method)": [[7, "echidna.procs.clusterings.ClusteringJournal.to_dict"]], "to_dict() (echidna.procs.clusterings.clusteringspec method)": [[7, "echidna.procs.clusterings.ClusteringSpec.to_dict"]], "to_dict() (echidna.procs.separations.separationjournal method)": [[7, "echidna.procs.separations.SeparationJournal.to_dict"]], "to_dict() (echidna.procs.separations.separationspec method)": [[7, "echidna.procs.separations.SeparationSpec.to_dict"]], "to_dict() (echidna.procs.trainings.epochjournal method)": [[7, "echidna.procs.trainings.EpochJournal.to_dict"]], "to_dict() (echidna.procs.trainings.trainingspec method)": [[7, "echidna.procs.trainings.TrainingSpec.to_dict"]], "to_dict() (echidna.procs.utils.stepjournal method)": [[7, "echidna.procs.utils.StepJournal.to_dict"]], "to_dict() (echidna.procs.validations.validationjournal method)": [[7, "echidna.procs.validations.ValidationJournal.to_dict"]], "to_dict() (echidna.procs.validations.validationspec method)": [[7, "echidna.procs.validations.ValidationSpec.to_dict"]], "train() (echidna.procs.trainings.trainingspec method)": [[7, "echidna.procs.trainings.TrainingSpec.train"]], "transcribe() (echidna.procs.transcriptions.transcriptionspec method)": [[7, "echidna.procs.transcriptions.TranscriptionSpec.transcribe"]], "validate() (echidna.procs.validations.validationspec method)": [[7, "echidna.procs.validations.ValidationSpec.validate"]]}})